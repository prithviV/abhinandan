{"version":3,"sources":["polyfills.js","helpers.js","events.js","form-builder.min.js","utils.js","kc-toggle.js","form-builder.js"],"names":["formBuilderHelpersFn","opts","formBuilder","_helpers","doCancel","utils","fbUtils","events","formBuilderEventsFn","makeClassName","str","replace","hyphenCase","mobileClass","a","test","substr","navigator","userAgent","vendor","window","opera","startMoving","event","ui","item","show","addClass","startIndex","$","this","index","stopMoving","removeClass","sender","sortable","save","beforeStop","form","document","getElementById","formID","lastIndex","children","length","cancelArray","stopIndex","placeholder","sortableControls","parent","hasClass","push","prepend","append","some","elem","safename","toLowerCase","forceNumber","initTooltip","tt","tooltip","find","mouseenter","outerWidth","css","width","stop","fadeIn","mouseleave","fadeOut","hide","getTypes","$field","types","type","attr","subtype","val","fieldOptionData","field","options","each","$option","selected","is","attrs","label","value","xmlSave","formData","prepData","xml","forEach","fieldIndex","fieldContent","match","optionData","values","i","option","markup","outerHTML","join","xmlField","childNodes","multipleField","fieldData","roleVals","map","get","name","camelCase","checked","role","className","exec","style","trimObj","escapeAttrs","jsonSave","JSON","stringify","getData","data","setData","parseXML","json","parse","dataType","doSave","dispatchEvent","formSaved","incrementId","id","split","lastIndexOf","newFieldNumber","parseInt","substring","baseString","updatePreview","fieldClass","indexOf","preview","fieldType","$prevHolder","previewData","multiple","classNames","fieldRender","html","kcToggle","debounce","func","timeout","wait","arguments","undefined","immediate","context","args","later","apply","callNow","clearTimeout","setTimeout","disabledTT","add","title","messages","fieldNonEditable","remove","querySelector","classes","button","submit","primaryType","re","RegExp","splice","unique","trim","closeConfirm","overlay","dialog","getElementsByClassName","classList","modalClosed","editorLayout","controlPosition","layoutMap","left","stage","controls","right","showOverlay","body","appendChild","onclick","confirm","message","yesAction","coords","yes","no","btnWrap","miniModal","pageX","Math","max","documentElement","clientWidth","innerWidth","pageY","clientHeight","innerHeight","position","top","focus","content","modalOpened","viewData","removeAllfields","fields","querySelectorAll","$fields","markEmptyArray","parentElement","dataset","getStarted","outerHeight","marginTop","setFieldOrder","$cbUL","fieldOrder","element","sessionStorage","setItem","orderFields","frmbFields","getItem","removeItem","Object","keys","controlOrder","concat","newOrderFields","filter","Boolean","closeAllEdit","toggleBtns","editModes","toggleEdit","fieldId","toggleBtn","editMode","toggle","toggleClass","slideToggle","stickyControls","$sortableFields","cbUL","$cbWrap","$stageWrap","cbWidth","cbPosition","getBoundingClientRect","scroll","scrollTop","offset","cbStyle","bottom","cbOffset","stageOffset","cbBottom","height","stageBottom","removeAttribute","showData","escapeHtml","code","pre","removeField","fieldID","fieldRemoved","console","warn","availableIds","slice","call","slideUp","stageWrap","loaded","Event","userDeclined","fieldAdded","Element","prototype","parentNode","removeChild","evt","createEvent","initEvent","assign","target","TypeError","source","key","hasOwnProperty","_typeof","Symbol","iterator","obj","constructor","inArray","needle","haystack","xmlRemove","Array","isArray","validAttr","invalid","attrString","attributes","safeAttr","safeAttrName","valString","escapeAttr","toString","$1","m","w","toUpperCase","tag","contentType","createElement","getContentType","appendContent","string","innerHTML","object","array","setAttribute","parseAttrs","attrVal","parseOptions","getElementsByTagName","textContent","xmlString","parser","DOMParser","parseFromString","escapeElement","replaceTag","\"","&","<",">","callback","scope","pos","arr","fieldMarkup","fieldLabel","optionsMarkup","fieldLabelText","fieldDesc","description","fieldRequired","fieldOptions","required","fieldLabelVal","fieldDataString","fieldVal","optionAttrsString","optionAttrs","other","otherOptionAttrs","selectColor","otherOptionCB","otherId","otherInput","otherInputValue","display","capitalize","Toggle","defaults","theme","off","on","extend","$kcToggle","insertAfter","kctOn","kctOff","kctHandle","kctInner","click","fn","jQuery","FormBuilder","processTypeUserAttrs","typeUserAttr","advField","attribute","orig","origValue","selectUserAttrs","inputUserAttrs","textAttrs","lastID","textInput","inputWrap","optis","selectAttrs","prop","select","disableFields","editOnAdd","defaultFields","inputSets","fieldRemoveWarn","roles","1","addOption","allFieldsRemoved","allowSelect","allowMultipleFiles","autocomplete","cannotBeEmpty","checkboxGroup","checkbox","checkboxes","clearAllMessage","clearAll","close","copy","copyButton","copyButtonTooltip","dateField","descriptionField","devMode","editNames","editorTitle","editXML","enableOther","enableOtherMsg","fieldDeleteWarning","fieldVars","fieldRemoveWarning","fileUpload","formUpdated","header","hidden","labelEmpty","limitRole","mandatory","maxlength","minOptionMessage","multipleFiles","number","optional","optionLabelPlaceholder","optionValuePlaceholder","optionEmpty","paragraph","placeholders","text","textarea","email","password","radioGroup","radio","removeMessage","removeOption","richText","selectOptions","selectionsMessage","size","sizes","xs","sm","lg","styles","btn","default","danger","info","primary","success","warning","textArea","viewJSON","viewXML","notify","error","log","showActionButtons","typeUserAttrs","typeUserEvents","prefix","subtypes","subtypeDefault","frmbID","layout","boxID","cbUl","class","typeLabel","appendTo","set","$set","cursor","opacity","revert","start","cancel","helper","connectWith","distance","update","processControl","control","contains","inputSet","showHeader","prepFieldVars","$formWrap","cbWrap","viewDataText","saveAll","formActions","before","saveAndUpdate","parents","nonEditableFields","prependedField","appendedField","isNew","nameAttr","appendNewField","loadFields","e","offsetX","offsetY","epoch","Date","getTime","optionActions","isMultiple","selectFieldOptions","advFields","optionFields","isOptionField","valueField","requiredField","boolAttribute","first","textAttribute","selectAttribute","btnStyles","numberAttribute","labels","second","rolesDisplay","availableRoles","roleId","accessLabels","txt","input","unshift","tags","styleField","styleLabel","active","attrLabel","inputConfig","min","placeholderFields","noName","attributefield","noMakeAttr","attributeLabel","noRequire","noMake","requireField","delBtn","copyBtn","liContents","requiredDisplay","$li","eq","onadd","multipleSelect","optionInputType","optionDataOrder","optionInputs","removeAttrs","cloneItem","currentItem","currentId","ts","cloneName","$clone","clone","getAttribute","newName","newVal","onclone","preventDefault","optionsCount","handled","trigger","stopPropagation","targetID","closest","delegate","closestToolTip","ttVal","after","newType","buttonPosition","bodyRect","deleteID","addEventListener","warnH3","warnMessage","styleVal","$parent","$btnStyle","prev","siblings","requiredAsterisk","enableRolesCB","removeAttr","$optionWrap","$multiple","$firstOption","xmlButton","clearButton","actions","clearFields","addField"],"mappings":"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","file":"form-builder.min.js","sourcesContent":["'use strict';\n\n// Element.remove() polyfill\nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function() {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\n// Event polyfill\nif (typeof Event !== 'function') {\n  (function() {\n    window.Event = function(evt) {\n      var event = document.createEvent('Event');\n      event.initEvent(evt, true, true);\n      return event;\n    };\n  })();\n}\n\n// Object.assign polyfill\nif (typeof Object.assign != 'function') {\n  Object.assign = function(target) {\n    'use strict';\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n      if (source != null) {\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n}\n","function formBuilderHelpersFn(opts, formBuilder) {\n  'use strict';\n  var _helpers = {\n    doCancel: false\n  };\n  var utils = fbUtils;\n\n  formBuilder.events = formBuilderEventsFn();\n\n  /**\n   * Convert converts messy `cl#ssNames` into valid `class-names`\n   *\n   * @param  {string} str\n   * @return {string}\n   */\n  _helpers.makeClassName = (str) => {\n    str = str.replace(/[^\\w\\s\\-]/gi, '');\n    return utils.hyphenCase(str);\n  };\n\n  /**\n   * Add a mobile class\n   *\n   * @return {string}\n   */\n  _helpers.mobileClass = function() {\n    var mobileClass = '';\n    (function(a) {\n      if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n        mobileClass = ' fb-mobile';\n      }\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return mobileClass;\n  };\n\n  /**\n   * Callback for when a drag begins\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.startMoving = function(event, ui) {\n    ui.item.show().addClass('moving');\n    _helpers.startIndex = $('li', this).index(ui.item);\n  };\n\n  /**\n   * Callback for when a drag ends\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.stopMoving = function(event, ui) {\n    ui.item.removeClass('moving');\n    if (_helpers.doCancel) {\n      $(ui.sender).sortable('cancel');\n      $(this).sortable('cancel');\n    }\n    _helpers.save();\n    _helpers.doCancel = false;\n  };\n\n  /**\n   * jQuery UI sortable beforeStop callback used for both lists.\n   * Logic for canceling the sort or drop.\n   */\n  _helpers.beforeStop = function(event, ui) {\n    var form = document.getElementById(opts.formID),\n      lastIndex = form.children.length - 1,\n      cancelArray = [];\n    _helpers.stopIndex = ui.placeholder.index() - 1;\n\n    if (!opts.sortableControls && ui.item.parent().hasClass('frmb-control')) {\n      cancelArray.push(true);\n    }\n\n    if (opts.prepend) {\n      cancelArray.push(_helpers.stopIndex === 0);\n    }\n\n    if (opts.append) {\n      cancelArray.push((_helpers.stopIndex + 1) === lastIndex);\n    }\n\n    _helpers.doCancel = cancelArray.some(elem => elem === true);\n  };\n\n  /**\n   * Make strings safe to be used as classes\n   *\n   * @param  {string} str string to be converted\n   * @return {string}     converter string\n   */\n  _helpers.safename = function(str) {\n    return str.replace(/\\s/g, '-').replace(/[^a-zA-Z0-9\\-]/g, '').toLowerCase();\n  };\n\n  /**\n   * Strips non-numbers from a number only input\n   *\n   * @param  {string} str string with possible number\n   * @return {string}     string without numbers\n   */\n  _helpers.forceNumber = function(str) {\n    return str.replace(/[^0-9]/g, '');\n  };\n\n  /**\n   * hide and show mouse tracking tooltips, only used for disabled\n   * fields in the editor.\n   *\n   * @todo   remove or refactor to make better use\n   * @param  {Object} tt jQuery option with nexted tooltip\n   * @return {void}\n   */\n  _helpers.initTooltip = function(tt) {\n    var tooltip = tt.find('.tooltip');\n    tt.mouseenter(function() {\n      if (tooltip.outerWidth() > 200) {\n        tooltip.addClass('max-width');\n      }\n      tooltip.css('left', tt.width() + 14);\n      tooltip.stop(true, true).fadeIn('fast');\n    }).mouseleave(function() {\n      tt.find('.tooltip').stop(true, true).fadeOut('fast');\n    });\n    tooltip.hide();\n  };\n\n  /**\n   * Attempts to get element type and subtype\n   *\n   * @param  {Object} $field\n   * @return {Object}\n   */\n  _helpers.getTypes = function($field) {\n    let types = {\n        type: $field.attr('type')\n      },\n      subtype = $('.fld-subtype', $field).val();\n\n    if (subtype !== types.type) {\n      types.subtype = subtype;\n    }\n\n    return types;\n  };\n\n  /**\n   * Get option data for a field\n   * @param  {Object} field jQuery field object\n   * @return {Array}        Array of option values\n   */\n  _helpers.fieldOptionData = function(field) {\n    let options = [];\n\n    $('.sortable-options li', field).each(function() {\n      let $option = $(this),\n        selected = $('.option-selected', $option).is(':checked'),\n        attrs = {\n          label: $('.option-label', $option).val(),\n          value: $('.option-value', $option).val()\n        };\n\n      if (selected) {\n        attrs.selected = selected;\n      }\n\n      options.push(attrs);\n    });\n\n    return options;\n  };\n\n  /**\n   * XML save\n   *\n   * @param  {Object} form sortableFields node\n   */\n  _helpers.xmlSave = function(form) {\n\n    let formData = _helpers.prepData(form),\n      xml = ['<form-template>\\n\\t<fields>'];\n\n    utils.forEach(formData, function(fieldIndex, field) {\n      let fieldContent = null;\n\n      // Handle options\n      if (field.type.match(/(select|checkbox-group|radio-group)/)) {\n        let optionData = field.values,\n          options = [];\n\n        for (var i = 0; i < optionData.length; i++) {\n          let option = utils.markup('option', optionData[i].label, optionData[i]).outerHTML;\n          options.push('\\n\\t\\t\\t' + option);\n        }\n        options.push('\\n\\t\\t');\n\n        fieldContent = options.join('');\n        delete field.values;\n      }\n\n      let xmlField = utils.markup('field', fieldContent, field);\n      xml.push('\\n\\t\\t' + xmlField.outerHTML);\n    });\n\n    xml.push('\\n\\t</fields>\\n</form-template>');\n\n    return xml.join('');\n  };\n\n  _helpers.prepData = function(form) {\n    var formData = [];\n\n    if (form.childNodes.length !== 0) {\n      // build data object\n      utils.forEach(form.childNodes, function(index, field) {\n        var $field = $(field);\n\n        if (!($field.hasClass('disabled'))) {\n          let fieldData = _helpers.getTypes($field),\n            roleVals = $('.roles-field:checked', field).map(function() {\n              return this.value;\n            }).get();\n\n          $('[class*=\"fld-\"]', field).each(function() {\n            let name = utils.camelCase(this.name);\n            fieldData[name] = this.type === 'checkbox' ? this.checked : this.value;\n          });\n\n          if (roleVals.length) {\n            fieldData.role = roleVals.join(',');\n          }\n\n          fieldData.className = fieldData.className || fieldData.class; // backwards compatibility\n\n          var match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(fieldData.className);\n          if (match) {\n            fieldData.style = match[1];\n          }\n\n          fieldData = utils.trimObj(fieldData);\n          fieldData = utils.escapeAttrs(fieldData);\n\n          var multipleField = fieldData.type.match(/(select|checkbox-group|radio-group)/);\n\n          if (multipleField) {\n            fieldData.values = _helpers.fieldOptionData($field);\n          }\n\n          formData.push(fieldData);\n        }\n\n      });\n    }\n\n    return formData;\n  };\n\n  _helpers.jsonSave = function(form) {\n    return window.JSON.stringify(_helpers.prepData(form), null, '\\t');\n  };\n\n  _helpers.getData = function(formData) {\n\n    let data = formData || opts.formData;\n\n    if (!data) {\n      return false;\n    }\n\n    let setData = {\n      xml: formData => utils.parseXML(formData),\n      json: formData => window.JSON.parse(formData)\n    };\n\n    formBuilder.formData = setData[opts.dataType](data) || [];\n\n    return formBuilder.formData;\n  };\n\n  /**\n   * Saves and returns formData\n   * @return {XML|JSON}\n   */\n  _helpers.save = function() {\n    var form = document.getElementById(opts.formID);\n\n    let doSave = {\n      xml: _helpers.xmlSave,\n      json: _helpers.jsonSave\n    };\n\n    // save action for current `dataType`\n    formBuilder.formData = doSave[opts.dataType](form);\n\n    //trigger formSaved event\n    document.dispatchEvent(formBuilder.events.formSaved);\n    return formBuilder.formData;\n  };\n\n  /**\n   * increments the field ids with support for multiple editors\n   * @param  {String} id field ID\n   * @return {String}    incremented field ID\n   */\n  _helpers.incrementId = function(id) {\n    var split = id.lastIndexOf('-'),\n      newFieldNumber = parseInt(id.substring(split + 1)) + 1,\n      baseString = id.substring(0, split);\n\n    return `${baseString}-${newFieldNumber}`;\n  };\n\n  /**\n   * Collect field attribute values and call fieldPreview to generate preview\n   * @param  {Object} field jQuery wrapped dom object @todo, remove jQuery dependency\n   */\n  _helpers.updatePreview = function(field) {\n    var fieldClass = field.attr('class');\n    if (fieldClass.indexOf('ui-sortable-handle') !== -1) {\n      return;\n    }\n\n    var fieldType = $(field).attr('type'),\n      $prevHolder = $('.prev-holder', field),\n      previewData = {\n        type: fieldType\n      },\n      preview;\n\n    $('[class*=\"fld-\"]', field).each(function() {\n      let name = utils.camelCase(this.name);\n      previewData[name] = this.type === 'checkbox' ? this.checked : this.value;\n    });\n\n    let style = $('.btn-style', field).val();\n    if (style) {\n      previewData.style = style;\n    }\n\n    if (fieldType.match(/(select|checkbox-group|radio-group)/)) {\n      previewData.values = [];\n      previewData.multiple = $('[name=\"multiple\"]', field).is(':checked');\n\n      $('.sortable-options li', field).each(function() {\n        let option = {};\n        option.selected = $('.option-selected', this).is(':checked');\n        option.value = $('.option-value', this).val();\n        option.label = $('.option-label', this).val();\n        previewData.values.push(option);\n      });\n    }\n\n    previewData = utils.trimObj(previewData);\n\n    previewData.className = _helpers.classNames(field, previewData);\n    $('.fld-className', field).val(previewData.className);\n\n    field.data('fieldData', previewData);\n    preview = utils.fieldRender(previewData, opts, true);\n\n    $prevHolder.html(preview);\n\n    $('input[toggle]', $prevHolder).kcToggle();\n  };\n\n  _helpers.debounce = function(func, wait = 250, immediate = false) {\n    var timeout;\n    return function() {\n      var context = this,\n        args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  };\n\n  /**\n   * Display a custom tooltip for disabled fields.\n   *\n   * @param  {Object} field\n   */\n  _helpers.disabledTT = {\n    className: 'frmb-tt',\n    add: function(field) {\n      let title = opts.messages.fieldNonEditable;\n\n      if (title) {\n        var tt = utils.markup('p', title, {className: _helpers.disabledTT.className});\n        field.append(tt);\n      }\n    },\n    remove: function(field) {\n      $('.frmb-tt', field).remove();\n    }\n  };\n\n  _helpers.classNames = function(field, previewData) {\n    let i,\n      type = previewData.type,\n      style = previewData.style;\n    let className = field[0].querySelector('.fld-className').value;\n    let classes = className.split(' ');\n    let types = {\n      button: 'btn',\n      submit: 'btn'\n    };\n\n    let primaryType = types[type];\n\n    if (primaryType) {\n      if (style) {\n        for (i = 0; i < classes.length; i++) {\n          let re = new RegExp('(?:^|\\s)' + primaryType + '-(.*?)(?:\\s|$)+', 'g');\n          let match = classes[i].match(re);\n          if (match) {\n            classes.splice(i, 1);\n          }\n        }\n        classes.push(primaryType + '-' + style);\n      }\n      classes.push(primaryType);\n    }\n\n    // reverse the array to put custom classes at end, remove any duplicates, convert to string, remove whitespace\n    return utils.unique(classes).join(' ').trim();\n  };\n\n  /**\n   * Closes and open dialog\n   *\n   * @param  {Object} overlay Existing overlay if there is one\n   * @param  {Object} dialog  Existing dialog\n   * @return {Event}          Triggers modalClosed event\n   */\n  _helpers.closeConfirm = function(overlay, dialog) {\n    overlay = overlay || document.getElementsByClassName('form-builder-overlay')[0];\n    dialog = dialog || document.getElementsByClassName('form-builder-dialog')[0];\n    overlay.classList.remove('visible');\n    dialog.remove();\n    overlay.remove();\n    document.dispatchEvent(formBuilder.events.modalClosed);\n  };\n\n  /**\n   * Returns the layout data based on controlPosition option\n   * @param  {String} controlPosition 'left' or 'right'\n   * @return {Object}\n   */\n  _helpers.editorLayout = function(controlPosition) {\n    let layoutMap = {\n      left: {\n        stage: 'pull-right',\n        controls: 'pull-left'\n      },\n      right: {\n        stage: 'pull-left',\n        controls: 'pull-right'\n      }\n    };\n\n    return layoutMap[controlPosition] ? layoutMap[controlPosition] : '';\n  };\n\n  /**\n   * Adds overlay to the page. Used for modals.\n   * @return {Object}\n   */\n  _helpers.showOverlay = function() {\n    var overlay = utils.markup('div', null, {\n      className: 'form-builder-overlay'\n    });\n    document.body.appendChild(overlay);\n    overlay.classList.add('visible');\n\n    overlay.onclick = function() {\n      _helpers.closeConfirm(overlay);\n    };\n\n    return overlay;\n  };\n\n  /**\n   * Custom confirmation dialog\n   *\n   * @param  {Object}  message   Content to be displayed in the dialog\n   * @param  {Func}  yesAction callback to fire if they confirm\n   * @param  {Boolean} coords    location to put the dialog\n   * @param  {String}  className Custom class to be added to the dialog\n   * @return {Object}            Reference to the modal\n   */\n  _helpers.confirm = function(message, yesAction, coords = false, className = '') {\n    var overlay = _helpers.showOverlay();\n    var yes = utils.markup('button', opts.messages.yes, {className: 'yes btn btn-success btn-sm'}),\n      no = utils.markup('button', opts.messages.no, {className: 'no btn btn-danger btn-sm'});\n\n    no.onclick = function() {\n      _helpers.closeConfirm(overlay);\n    };\n\n    yes.onclick = function() {\n      yesAction();\n      _helpers.closeConfirm(overlay);\n    };\n\n    var btnWrap = utils.markup('div', [no, yes], {className: 'button-wrap'});\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = utils.markup('div', [message, btnWrap], {className: className});\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    yes.focus();\n    return miniModal;\n  };\n\n  /**\n   * Popup dialog the does not require confirmation.\n   * @param  {String|DOM|Array}  content\n   * @param  {Boolean} coords    false if no coords are provided. Without coordinates\n   *                             the popup will appear center screen.\n   * @param  {String}  className classname to be added to the dialog\n   * @return {Object}            dom\n   */\n  _helpers.dialog = function(content, coords = false, className = '') {\n    _helpers.showOverlay();\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = utils.markup('div', content, {className: className});\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    document.dispatchEvent(formBuilder.events.modalOpened);\n\n    if (className.indexOf('data-dialog') !== -1) {\n      document.dispatchEvent(formBuilder.events.viewData);\n    }\n\n    return miniModal;\n  };\n\n  /**\n   * Removes all fields from the form\n   */\n  _helpers.removeAllfields = function() {\n    var form = document.getElementById(opts.formID);\n    var fields = form.querySelectorAll('li.form-field');\n    var $fields = $(fields);\n    var markEmptyArray = [];\n\n    if (!fields.length) {\n      return false;\n    }\n\n    if (opts.prepend) {\n      markEmptyArray.push(true);\n    }\n\n    if (opts.append) {\n      markEmptyArray.push(true);\n    }\n\n    if (!markEmptyArray.some(elem => elem === true)) {\n      form.parentElement.classList.add('empty');\n      form.parentElement.dataset.content = opts.messages.getStarted;\n    }\n\n    form.classList.add('removing');\n\n    var outerHeight = 0;\n    $fields.each(function() {\n      outerHeight += $(this).outerHeight() + 3;\n    });\n\n    fields[0].style.marginTop = (-outerHeight) + 'px';\n\n    setTimeout(function() {\n      $fields.remove();\n      document.getElementById(opts.formID).classList.remove('removing');\n      _helpers.save();\n    }, 400);\n\n  };\n\n  /**\n   * If user re-orders the elements their order should be saved.\n   *\n   * @param {Object} $cbUL our list of elements\n   */\n  _helpers.setFieldOrder = function($cbUL) {\n    if (!opts.sortableControls) {\n      return false;\n    }\n    var fieldOrder = {};\n    $cbUL.children().each(function(index, element) {\n      fieldOrder[index] = $(element).data('attrs').type;\n    });\n    if (window.sessionStorage) {\n      window.sessionStorage.setItem('fieldOrder', window.JSON.stringify(fieldOrder));\n    }\n  };\n\n  /**\n   * Reorder the controls if the user has previously ordered them.\n   *\n   * @param  {Array} frmbFields\n   * @return {Array}\n   */\n  _helpers.orderFields = function(frmbFields) {\n    var fieldOrder = false;\n\n    if (window.sessionStorage) {\n      if (opts.sortableControls) {\n        fieldOrder = window.sessionStorage.getItem('fieldOrder');\n      } else {\n        window.sessionStorage.removeItem('fieldOrder');\n      }\n    }\n\n    if (!fieldOrder) {\n      let controlOrder = opts.controlOrder.concat(frmbFields.map(field => field.attrs.type));\n      fieldOrder = utils.unique(controlOrder);\n    } else {\n      fieldOrder = window.JSON.parse(fieldOrder);\n      fieldOrder = Object.keys(fieldOrder).map(function(i) {\n        return fieldOrder[i];\n      });\n    }\n\n    var newOrderFields = [];\n\n    fieldOrder.forEach((fieldType) => {\n      var field = frmbFields.filter(function(field) {\n        return field.attrs.type === fieldType;\n      })[0];\n      newOrderFields.push(field);\n    });\n\n    return newOrderFields.filter(Boolean);\n  };\n\n  /**\n   * Close fields being editing\n   * @param  {Object} stage\n   */\n  _helpers.closeAllEdit = function(stage) {\n    var fields = $('> li.editing', stage),\n      toggleBtns = $('.toggle-form', stage),\n      editModes = $('.frm-holder', fields);\n\n    toggleBtns.removeClass('open');\n    fields.removeClass('editing');\n    editModes.hide();\n    $('.prev-holder', fields).show();\n  };\n\n  /**\n   * Toggles the edit mode for the given field\n   * @param  {String} fieldId\n   */\n  _helpers.toggleEdit = function(fieldId) {\n    var field = document.getElementById(fieldId),\n      toggleBtn = $('.toggle-form', field),\n      editMode = $('.frm-holder', field);\n    field.classList.toggle('editing');\n    toggleBtn.toggleClass('open');\n    $('.prev-holder', field).slideToggle(250);\n    editMode.slideToggle(250);\n  };\n\n  /**\n   * Controls follow scroll to the bottom of the editor\n   * @param  {Object} $sortableFields\n   * @param  {Object} cbUL\n   */\n  _helpers.stickyControls = function($sortableFields, cbUL) {\n\n    var $cbWrap = $(cbUL).parent(),\n      $stageWrap = $sortableFields.parent(),\n      cbWidth = $cbWrap.width(),\n      cbPosition = cbUL.getBoundingClientRect();\n\n    $(window).scroll(function() {\n\n      var scrollTop = $(this).scrollTop();\n\n      if (scrollTop > $stageWrap.offset().top) {\n\n        let cbStyle = {\n          position: 'fixed',\n          width: cbWidth,\n          top: 0,\n          bottom: 'auto',\n          right: 'auto',\n          left: cbPosition.left\n        };\n\n        var cbOffset = $cbWrap.offset(),\n          stageOffset = $stageWrap.offset(),\n          cbBottom = cbOffset.top + $cbWrap.height(),\n          stageBottom = stageOffset.top + $stageWrap.height();\n\n        if (cbBottom > stageBottom && (cbOffset.top !== stageOffset.top)) {\n          $cbWrap.css({\n            position: 'absolute',\n            top: 'auto',\n            bottom: 0,\n            right: 0,\n            left: 'auto'\n          });\n        }\n\n        if (cbBottom < stageBottom || (cbBottom === stageBottom && cbOffset.top > scrollTop)) {\n          $cbWrap.css(cbStyle);\n        }\n\n      } else {\n        cbUL.parentElement.removeAttribute('style');\n      }\n    });\n\n  };\n\n  /**\n   * Open a dialog with the form's data\n   */\n  _helpers.showData = () => {\n    var data = utils.escapeHtml(formBuilder.formData),\n      code = utils.markup('code', data, {className: 'formData-' + opts.dataType}),\n      pre = utils.markup('pre', code);\n\n    _helpers.dialog(pre, null, 'data-dialog');\n  };\n\n  /**\n   * Remove a field from the stage\n   * @param  {String}  fieldID ID of the field to be removed\n   * @return {Boolean} fieldRemoved returns true if field is removed\n   */\n  _helpers.removeField = (fieldID) => {\n    let fieldRemoved = false,\n      form = document.getElementById(opts.formID),\n      fields = form.getElementsByClassName('form-field');\n\n    if (!fields.length) {\n      console.warn('No fields to remove');\n      return false;\n    }\n\n    if (!fieldID) {\n      let availableIds = [].slice.call(fields).map((field) => {\n        return field.id;\n      });\n      console.warn('fieldID required to use `removeField` action.');\n      console.warn('Available IDs: ' + availableIds.join(', '));\n    }\n\n    let field = document.getElementById(fieldID),\n    $field = $(field);\n    if (!field) {\n      console.warn('Field not found');\n      return false;\n    }\n\n    $field.slideUp(250, function() {\n      $field.removeClass('deleting');\n      $field.remove();\n      fieldRemoved = true;\n      _helpers.save();\n      if (!form.childNodes.length) {\n        let stageWrap = form.parentElement;\n        stageWrap.classList.add('empty');\n        stageWrap.dataset.content = opts.messages.getStarted;\n      }\n    });\n\n    document.dispatchEvent(formBuilder.events.fieldRemoved);\n    return fieldRemoved;\n  };\n\n  return _helpers;\n}\n\n","function formBuilderEventsFn() {\n  'use strict';\n\n  var events = {};\n\n  events.loaded = new Event('loaded');\n  events.viewData = new Event('viewData');\n  events.userDeclined = new Event('userDeclined');\n  events.modalClosed = new Event('modalClosed');\n  events.modalOpened = new Event('modalOpened');\n  events.formSaved = new Event('formSaved');\n  events.fieldAdded = new Event('fieldAdded');\n  events.fieldRemoved = new Event('fieldRemoved');\n\n  return events;\n}\n","'use strict';\n\n// Element.remove() polyfill\n\nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\n// Event polyfill\nif (typeof Event !== 'function') {\n  (function () {\n    window.Event = function (evt) {\n      var event = document.createEvent('Event');\n      event.initEvent(evt, true, true);\n      return event;\n    };\n  })();\n}\n\n// Object.assign polyfill\nif (typeof Object.assign != 'function') {\n  Object.assign = function (target) {\n    'use strict';\n\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n      if (source != null) {\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n}\n'use strict';\n/**\n *\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar fbUtils = {};\n\n// cleaner syntax for testing indexOf element\nfbUtils.inArray = function (needle, haystack) {\n  return haystack.indexOf(needle) !== -1;\n};\n\n/**\n * Remove null or undefined values\n * @param  {Object} attrs {attrName: attrValue}\n * @return {Object}       Object trimmed of null or undefined values\n */\nfbUtils.trimObj = function (attrs) {\n  var xmlRemove = [null, undefined, '', false, 'false'];\n  for (var attr in attrs) {\n    if (fbUtils.inArray(attrs[attr], xmlRemove)) {\n      delete attrs[attr];\n    } else if (Array.isArray(attrs[attr])) {\n      if (!attrs[attr].length) {\n        delete attrs[attr];\n      }\n    }\n  }\n\n  return attrs;\n};\n\n/**\n * Test if attribute is a valid HTML attribute\n * @param  {String} attr\n * @return {Boolean}\n */\nfbUtils.validAttr = function (attr) {\n  var invalid = ['values', 'enableOther', 'other', 'label',\n  // 'style',\n  'subtype'];\n  return !fbUtils.inArray(attr, invalid);\n};\n\n/**\n * Convert an attrs object into a string\n *\n * @param  {Object} attrs object of attributes for markup\n * @return {string}\n */\nfbUtils.attrString = function (attrs) {\n  var attributes = [];\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr) && fbUtils.validAttr(attr)) {\n      attr = fbUtils.safeAttr(attr, attrs[attr]);\n      attributes.push(attr.name + attr.value);\n    }\n  }\n  return attributes.join(' ');\n};\n\n/**\n * Convert attributes to markup safe strings\n * @param  {String} name  attribute name\n * @param  {String} value attribute value\n * @return {Object}       {attrName: attrValue}\n */\nfbUtils.safeAttr = function (name, value) {\n  name = fbUtils.safeAttrName(name);\n  var valString = void 0;\n\n  if (value) {\n    if (Array.isArray(value)) {\n      valString = fbUtils.escapeAttr(value.join(' '));\n    } else {\n      if (typeof value === 'boolean') {\n        value = value.toString();\n      }\n      valString = fbUtils.escapeAttr(value.replace(',', ' ').trim());\n    }\n  }\n\n  value = value ? '=\"' + valString + '\"' : '';\n  return {\n    name: name,\n    value: value\n  };\n};\n\nfbUtils.safeAttrName = function (name) {\n  var safeAttr = {\n    className: 'class'\n  };\n\n  return safeAttr[name] || fbUtils.hyphenCase(name);\n};\n\n/**\n * Convert strings into lowercase-hyphen\n *\n * @param  {String} str\n * @return {String}\n */\nfbUtils.hyphenCase = function (str) {\n  str = str.replace(/[^\\w\\s\\-]/gi, '');\n  str = str.replace(/([A-Z])/g, function ($1) {\n    return '-' + $1.toLowerCase();\n  });\n\n  return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n};\n\n/**\n * convert a hyphenated string to camelCase\n * @param  {String} str\n * @return {String}\n */\nfbUtils.camelCase = function (str) {\n  return str.replace(/-([a-z])/g, function (m, w) {\n    return w.toUpperCase();\n  });\n};\n\n/**\n * Generate markup wrapper where needed\n *\n * @param  {string}              tag\n * @param  {String|Array|Object} content we wrap this\n * @param  {Object}              attrs\n * @return {String}\n */\nfbUtils.markup = function (tag) {\n  var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var contentType = void 0,\n      field = document.createElement(tag),\n      getContentType = function getContentType(content) {\n    return Array.isArray(content) ? 'array' : typeof content === 'undefined' ? 'undefined' : _typeof(content);\n  },\n      appendContent = {\n    string: function string(content) {\n      field.innerHTML = content;\n    },\n    object: function object(content) {\n      return field.appendChild(content);\n    },\n    array: function array(content) {\n      for (var i = 0; i < content.length; i++) {\n        contentType = getContentType(content[i]);\n        appendContent[contentType](content[i]);\n      }\n    }\n  };\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      var name = fbUtils.safeAttrName(attr);\n      field.setAttribute(name, attrs[attr]);\n    }\n  }\n\n  contentType = getContentType(content);\n\n  if (content) {\n    appendContent[contentType].call(this, content);\n  }\n\n  return field;\n};\n\n/**\n * Convert html element attributes to key/value object\n * @param  {Object} DOM element\n * @return {Object} ex: {attrName: attrValue}\n */\nfbUtils.parseAttrs = function (elem) {\n  var attrs = elem.attributes;\n  var data = {};\n  fbUtils.forEach(attrs, function (attr) {\n    var attrVal = attrs[attr].value;\n    if (attrVal.match(/false|true/g)) {\n      attrVal = attrVal === 'true';\n    } else if (attrVal.match(/undefined/g)) {\n      attrVal = undefined;\n    }\n\n    if (attrVal) {\n      data[attrs[attr].name] = attrVal;\n    }\n  });\n\n  return data;\n};\n\n/**\n * Convert field options to optionData\n * @param  {Object} DOM element\n * @return {Array}      optionData array\n */\nfbUtils.parseOptions = function (field) {\n  var options = field.getElementsByTagName('option'),\n      optionData = {},\n      data = [];\n\n  if (options.length) {\n    for (var i = 0; i < options.length; i++) {\n      optionData = fbUtils.parseAttrs(options[i]);\n      optionData.label = options[i].textContent;\n      data.push(optionData);\n    }\n  }\n\n  return data;\n};\n\n/**\n * Parse XML formData\n * @param  {String} xmlString\n * @return {Array}            formData array\n */\nfbUtils.parseXML = function (xmlString) {\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(xmlString, 'text/xml'),\n      formData = [];\n\n  if (xml) {\n    var fields = xml.getElementsByTagName('field');\n    for (var i = 0; i < fields.length; i++) {\n      var fieldData = fbUtils.parseAttrs(fields[i]);\n\n      if (fields[i].children.length) {\n        fieldData.values = fbUtils.parseOptions(fields[i]);\n      }\n\n      formData.push(fieldData);\n    }\n  }\n\n  return formData;\n};\n\n/**\n * Escape markup so it can be displayed rather than rendered\n * @param  {String} html markup\n * @return {String}      escaped html\n */\nfbUtils.escapeHtml = function (html) {\n  var escapeElement = document.createElement('textarea');\n  escapeElement.textContent = html;\n  return escapeElement.innerHTML;\n};\n\n// Escape an attribute\nfbUtils.escapeAttr = function (str) {\n  var match = {\n    '\"': '&quot;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n  };\n\n  function replaceTag(tag) {\n    return match[tag] || tag;\n  }\n\n  return typeof str === 'string' ? str.replace(/[\"&<>]/g, replaceTag) : str;\n};\n\n// Escape attributes\nfbUtils.escapeAttrs = function (attrs) {\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      attrs[attr] = fbUtils.escapeAttr(attrs[attr]);\n    }\n  }\n\n  return attrs;\n};\n\n// forEach that can be used on nodeList\nfbUtils.forEach = function (array, callback, scope) {\n  for (var i = 0; i < array.length; i++) {\n    callback.call(scope, i, array[i]); // passes back stuff we need\n  }\n};\n\n/**\n * Remove duplicates from an array of elements\n * @param  {Array} arrArg array with possible duplicates\n * @return {Array}        array with only unique values\n */\nfbUtils.unique = function (array) {\n  return array.filter(function (elem, pos, arr) {\n    return arr.indexOf(elem) === pos;\n  });\n};\n\n/**\n   * Generate preview markup\n   * @param  {object} fieldData\n   * @return {string}       preview markup for field\n   */\nfbUtils.fieldRender = function (fieldData, opts) {\n  var preview = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var fieldMarkup = '',\n      fieldLabel = '',\n      optionsMarkup = '',\n      fieldLabelText = fieldData.label || '',\n      fieldDesc = fieldData.description || '',\n      fieldRequired = '',\n      fieldOptions = fieldData.values;\n\n  fieldData.name = preview ? fieldData.name + '-preview' : fieldData.name;\n  fieldData.id = fieldData.name;\n  fieldData.name = fieldData.multiple ? fieldData.name + '[]' : fieldData.name;\n\n  fieldData.type = fieldData.subtype || fieldData.type;\n\n  if (fieldData.required) {\n    fieldData.required = null;\n    fieldData['aria-required'] = 'true';\n    fieldRequired = '<span class=\"required\">*</span>';\n  }\n\n  if (fieldData.type !== 'hidden') {\n    if (fieldDesc) {\n      fieldDesc = '<span class=\"tooltip-element\" tooltip=\"' + fieldDesc + '\">?</span>';\n    }\n    fieldLabel = '<label for=\"' + fieldData.id + '\" class=\"fb-' + fieldData.type + '-label\">' + fieldLabelText + ' ' + fieldRequired + ' ' + fieldDesc + '</label>';\n  }\n\n  var fieldLabelVal = fieldData.label;\n\n  delete fieldData.label;\n  delete fieldData.description;\n\n  var fieldDataString = fbUtils.attrString(fieldData);\n\n  switch (fieldData.type) {\n    case 'textarea':\n    case 'rich-text':\n      delete fieldData.type;\n      var fieldVal = fieldData.value || '';\n      fieldMarkup = fieldLabel + '<textarea ' + fieldDataString + '>' + fieldVal + '</textarea>';\n      break;\n    case 'select':\n      var optionAttrsString;\n      fieldData.type = fieldData.type.replace('-group', '');\n\n      if (fieldOptions) {\n\n        if (fieldData.placeholder) {\n          optionsMarkup += '<option disabled selected>' + fieldData.placeholder + '</option>';\n        }\n\n        for (var i = 0; i < fieldOptions.length; i++) {\n          if (!fieldOptions[i].selected || fieldData.placeholder) {\n            delete fieldOptions[i].selected;\n          }\n          if (!fieldOptions[i].label) {\n            fieldOptions[i].label = '';\n          }\n          optionAttrsString = fbUtils.attrString(fieldOptions[i]);\n          optionsMarkup += '<option ' + optionAttrsString + '>' + fieldOptions[i].label + '</option>';\n        }\n      }\n\n      fieldMarkup = fieldLabel + '<select ' + fieldDataString + '>' + optionsMarkup + '</select>';\n      break;\n    case 'checkbox-group':\n    case 'radio-group':\n      var optionAttrs = void 0;\n      fieldData.type = fieldData.type.replace('-group', '');\n\n      if (fieldData.type === 'checkbox') {\n        fieldData.name = fieldData.name + '[]';\n      }\n\n      if (fieldOptions) {\n        var _optionAttrsString = void 0;\n\n        for (var _i = 0; _i < fieldOptions.length; _i++) {\n          optionAttrs = Object.assign({ value: '', label: '' }, fieldData, fieldOptions[_i]);\n\n          if (optionAttrs.selected) {\n            delete optionAttrs.selected;\n            optionAttrs.checked = null;\n          }\n\n          optionAttrs.id = fieldData.id + '-' + _i;\n          _optionAttrsString = fbUtils.attrString(optionAttrs);\n          optionsMarkup += '<input ' + _optionAttrsString + ' /> <label for=\"' + optionAttrs.id + '\">' + optionAttrs.label + '</label><br>';\n        }\n\n        if (fieldData.other) {\n          var otherOptionAttrs = {\n            id: fieldData.id + '-' + 'other',\n            className: fieldData.className + ' other-option',\n            onclick: 'fbUtils.otherOptionCB(\\'' + fieldData.id + '-other\\')'\n          };\n\n          _optionAttrsString = fbUtils.attrString(Object.assign({}, fieldData, otherOptionAttrs));\n\n          optionsMarkup += '<input ' + _optionAttrsString + ' /> <label for=\"' + otherOptionAttrs.id + '\">' + opts.messages.other + '</label> <input type=\"text\" name=\"' + fieldData.name + '\" id=\"' + otherOptionAttrs.id + '-value\" style=\"display:none;\" />';\n        }\n      }\n      fieldMarkup = fieldLabel + '<div class=\"' + fieldData.type + '-group\">' + optionsMarkup + '</div>';\n      break;\n    case 'text':\n    case 'password':\n    case 'email':\n    case 'number':\n    case 'file':\n    case 'hidden':\n    case 'date':\n    case 'tel':\n    case 'autocomplete':\n      fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '>';\n      break;\n    case 'color':\n      fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '> ' + opts.messages.selectColor;\n      break;\n    case 'button':\n    case 'submit':\n      fieldMarkup = '<button ' + fieldDataString + '>' + fieldLabelVal + '</button>';\n      break;\n    case 'checkbox':\n      fieldMarkup = '<input ' + fieldDataString + '> ' + fieldLabel;\n\n      if (fieldData.toggle) {\n        setTimeout(function () {\n          $(document.getElementById(fieldData.id)).kcToggle();\n        }, 100);\n      }\n      break;\n    default:\n      fieldMarkup = '<' + fieldData.type + ' ' + fieldDataString + '>' + fieldLabelVal + '</' + fieldData.type + '>';\n  }\n\n  if (fieldData.type !== 'hidden') {\n    var className = fieldData.id ? 'fb-' + fieldData.type + ' form-group field-' + fieldData.id : '';\n    fieldMarkup = fbUtils.markup('div', fieldMarkup, {\n      className: className\n    });\n  } else {\n    fieldMarkup = fbUtils.markup('input', null, fieldData);\n  }\n\n  return fieldMarkup;\n};\n\n/**\n * Callback for other option.\n * Toggles the hidden text area for \"other\" option.\n * @param  {String} otherId id of the \"other\" option input\n */\nfbUtils.otherOptionCB = function (otherId) {\n  var otherInput = document.getElementById(otherId),\n      otherInputValue = document.getElementById(otherId + '-value');\n\n  if (otherInput.checked) {\n    otherInput.style.display = 'none';\n    otherInputValue.style.display = 'inline-block';\n  } else {\n    otherInput.style.display = 'inline-block';\n    otherInputValue.style.display = 'none';\n  }\n};\n\n/**\n * Capitalizes a string\n * @param  {String} str uncapitalized string\n * @return {String} str capitalized string\n */\nfbUtils.capitalize = function (str) {\n  return str.replace(/\\b\\w/g, function (m) {\n    return m.toUpperCase();\n  });\n};\n'use strict';\n\nfunction formBuilderHelpersFn(opts, formBuilder) {\n  'use strict';\n\n  var _helpers = {\n    doCancel: false\n  };\n  var utils = fbUtils;\n\n  formBuilder.events = formBuilderEventsFn();\n\n  /**\n   * Convert converts messy `cl#ssNames` into valid `class-names`\n   *\n   * @param  {string} str\n   * @return {string}\n   */\n  _helpers.makeClassName = function (str) {\n    str = str.replace(/[^\\w\\s\\-]/gi, '');\n    return utils.hyphenCase(str);\n  };\n\n  /**\n   * Add a mobile class\n   *\n   * @return {string}\n   */\n  _helpers.mobileClass = function () {\n    var mobileClass = '';\n    (function (a) {\n      if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n        mobileClass = ' fb-mobile';\n      }\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return mobileClass;\n  };\n\n  /**\n   * Callback for when a drag begins\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.startMoving = function (event, ui) {\n    ui.item.show().addClass('moving');\n    _helpers.startIndex = $('li', this).index(ui.item);\n  };\n\n  /**\n   * Callback for when a drag ends\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.stopMoving = function (event, ui) {\n    ui.item.removeClass('moving');\n    if (_helpers.doCancel) {\n      $(ui.sender).sortable('cancel');\n      $(this).sortable('cancel');\n    }\n    _helpers.save();\n    _helpers.doCancel = false;\n  };\n\n  /**\n   * jQuery UI sortable beforeStop callback used for both lists.\n   * Logic for canceling the sort or drop.\n   */\n  _helpers.beforeStop = function (event, ui) {\n    var form = document.getElementById(opts.formID),\n        lastIndex = form.children.length - 1,\n        cancelArray = [];\n    _helpers.stopIndex = ui.placeholder.index() - 1;\n\n    if (!opts.sortableControls && ui.item.parent().hasClass('frmb-control')) {\n      cancelArray.push(true);\n    }\n\n    if (opts.prepend) {\n      cancelArray.push(_helpers.stopIndex === 0);\n    }\n\n    if (opts.append) {\n      cancelArray.push(_helpers.stopIndex + 1 === lastIndex);\n    }\n\n    _helpers.doCancel = cancelArray.some(function (elem) {\n      return elem === true;\n    });\n  };\n\n  /**\n   * Make strings safe to be used as classes\n   *\n   * @param  {string} str string to be converted\n   * @return {string}     converter string\n   */\n  _helpers.safename = function (str) {\n    return str.replace(/\\s/g, '-').replace(/[^a-zA-Z0-9\\-]/g, '').toLowerCase();\n  };\n\n  /**\n   * Strips non-numbers from a number only input\n   *\n   * @param  {string} str string with possible number\n   * @return {string}     string without numbers\n   */\n  _helpers.forceNumber = function (str) {\n    return str.replace(/[^0-9]/g, '');\n  };\n\n  /**\n   * hide and show mouse tracking tooltips, only used for disabled\n   * fields in the editor.\n   *\n   * @todo   remove or refactor to make better use\n   * @param  {Object} tt jQuery option with nexted tooltip\n   * @return {void}\n   */\n  _helpers.initTooltip = function (tt) {\n    var tooltip = tt.find('.tooltip');\n    tt.mouseenter(function () {\n      if (tooltip.outerWidth() > 200) {\n        tooltip.addClass('max-width');\n      }\n      tooltip.css('left', tt.width() + 14);\n      tooltip.stop(true, true).fadeIn('fast');\n    }).mouseleave(function () {\n      tt.find('.tooltip').stop(true, true).fadeOut('fast');\n    });\n    tooltip.hide();\n  };\n\n  /**\n   * Attempts to get element type and subtype\n   *\n   * @param  {Object} $field\n   * @return {Object}\n   */\n  _helpers.getTypes = function ($field) {\n    var types = {\n      type: $field.attr('type')\n    },\n        subtype = $('.fld-subtype', $field).val();\n\n    if (subtype !== types.type) {\n      types.subtype = subtype;\n    }\n\n    return types;\n  };\n\n  /**\n   * Get option data for a field\n   * @param  {Object} field jQuery field object\n   * @return {Array}        Array of option values\n   */\n  _helpers.fieldOptionData = function (field) {\n    var options = [];\n\n    $('.sortable-options li', field).each(function () {\n      var $option = $(this),\n          selected = $('.option-selected', $option).is(':checked'),\n          attrs = {\n        label: $('.option-label', $option).val(),\n        value: $('.option-value', $option).val()\n      };\n\n      if (selected) {\n        attrs.selected = selected;\n      }\n\n      options.push(attrs);\n    });\n\n    return options;\n  };\n\n  /**\n   * XML save\n   *\n   * @param  {Object} form sortableFields node\n   */\n  _helpers.xmlSave = function (form) {\n\n    var formData = _helpers.prepData(form),\n        xml = ['<form-template>\\n\\t<fields>'];\n\n    utils.forEach(formData, function (fieldIndex, field) {\n      var fieldContent = null;\n\n      // Handle options\n      if (field.type.match(/(select|checkbox-group|radio-group)/)) {\n        var optionData = field.values,\n            options = [];\n\n        for (var i = 0; i < optionData.length; i++) {\n          var option = utils.markup('option', optionData[i].label, optionData[i]).outerHTML;\n          options.push('\\n\\t\\t\\t' + option);\n        }\n        options.push('\\n\\t\\t');\n\n        fieldContent = options.join('');\n        delete field.values;\n      }\n\n      var xmlField = utils.markup('field', fieldContent, field);\n      xml.push('\\n\\t\\t' + xmlField.outerHTML);\n    });\n\n    xml.push('\\n\\t</fields>\\n</form-template>');\n\n    return xml.join('');\n  };\n\n  _helpers.prepData = function (form) {\n    var formData = [];\n\n    if (form.childNodes.length !== 0) {\n      // build data object\n      utils.forEach(form.childNodes, function (index, field) {\n        var $field = $(field);\n\n        if (!$field.hasClass('disabled')) {\n          var match;\n          var multipleField;\n\n          (function () {\n            var fieldData = _helpers.getTypes($field),\n                roleVals = $('.roles-field:checked', field).map(function () {\n              return this.value;\n            }).get();\n\n            $('[class*=\"fld-\"]', field).each(function () {\n              var name = utils.camelCase(this.name);\n              fieldData[name] = this.type === 'checkbox' ? this.checked : this.value;\n            });\n\n            if (roleVals.length) {\n              fieldData.role = roleVals.join(',');\n            }\n\n            fieldData.className = fieldData.className || fieldData.class; // backwards compatibility\n\n            match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(fieldData.className);\n\n            if (match) {\n              fieldData.style = match[1];\n            }\n\n            fieldData = utils.trimObj(fieldData);\n            fieldData = utils.escapeAttrs(fieldData);\n\n            multipleField = fieldData.type.match(/(select|checkbox-group|radio-group)/);\n\n\n            if (multipleField) {\n              fieldData.values = _helpers.fieldOptionData($field);\n            }\n\n            formData.push(fieldData);\n          })();\n        }\n      });\n    }\n\n    return formData;\n  };\n\n  _helpers.jsonSave = function (form) {\n    return window.JSON.stringify(_helpers.prepData(form), null, '\\t');\n  };\n\n  _helpers.getData = function (formData) {\n\n    var data = formData || opts.formData;\n\n    if (!data) {\n      return false;\n    }\n\n    var setData = {\n      xml: function xml(formData) {\n        return utils.parseXML(formData);\n      },\n      json: function json(formData) {\n        return window.JSON.parse(formData);\n      }\n    };\n\n    formBuilder.formData = setData[opts.dataType](data) || [];\n\n    return formBuilder.formData;\n  };\n\n  /**\n   * Saves and returns formData\n   * @return {XML|JSON}\n   */\n  _helpers.save = function () {\n    var form = document.getElementById(opts.formID);\n\n    var doSave = {\n      xml: _helpers.xmlSave,\n      json: _helpers.jsonSave\n    };\n\n    // save action for current `dataType`\n    formBuilder.formData = doSave[opts.dataType](form);\n\n    //trigger formSaved event\n    document.dispatchEvent(formBuilder.events.formSaved);\n    return formBuilder.formData;\n  };\n\n  /**\n   * increments the field ids with support for multiple editors\n   * @param  {String} id field ID\n   * @return {String}    incremented field ID\n   */\n  _helpers.incrementId = function (id) {\n    var split = id.lastIndexOf('-'),\n        newFieldNumber = parseInt(id.substring(split + 1)) + 1,\n        baseString = id.substring(0, split);\n\n    return baseString + '-' + newFieldNumber;\n  };\n\n  /**\n   * Collect field attribute values and call fieldPreview to generate preview\n   * @param  {Object} field jQuery wrapped dom object @todo, remove jQuery dependency\n   */\n  _helpers.updatePreview = function (field) {\n    var fieldClass = field.attr('class');\n    if (fieldClass.indexOf('ui-sortable-handle') !== -1) {\n      return;\n    }\n\n    var fieldType = $(field).attr('type'),\n        $prevHolder = $('.prev-holder', field),\n        previewData = {\n      type: fieldType\n    },\n        preview;\n\n    $('[class*=\"fld-\"]', field).each(function () {\n      var name = utils.camelCase(this.name);\n      previewData[name] = this.type === 'checkbox' ? this.checked : this.value;\n    });\n\n    var style = $('.btn-style', field).val();\n    if (style) {\n      previewData.style = style;\n    }\n\n    if (fieldType.match(/(select|checkbox-group|radio-group)/)) {\n      previewData.values = [];\n      previewData.multiple = $('[name=\"multiple\"]', field).is(':checked');\n\n      $('.sortable-options li', field).each(function () {\n        var option = {};\n        option.selected = $('.option-selected', this).is(':checked');\n        option.value = $('.option-value', this).val();\n        option.label = $('.option-label', this).val();\n        previewData.values.push(option);\n      });\n    }\n\n    previewData = utils.trimObj(previewData);\n\n    previewData.className = _helpers.classNames(field, previewData);\n    $('.fld-className', field).val(previewData.className);\n\n    field.data('fieldData', previewData);\n    preview = utils.fieldRender(previewData, opts, true);\n\n    $prevHolder.html(preview);\n\n    $('input[toggle]', $prevHolder).kcToggle();\n  };\n\n  _helpers.debounce = function (func) {\n    var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n    var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n      var later = function later() {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  };\n\n  /**\n   * Display a custom tooltip for disabled fields.\n   *\n   * @param  {Object} field\n   */\n  _helpers.disabledTT = {\n    className: 'frmb-tt',\n    add: function add(field) {\n      var title = opts.messages.fieldNonEditable;\n\n      if (title) {\n        var tt = utils.markup('p', title, { className: _helpers.disabledTT.className });\n        field.append(tt);\n      }\n    },\n    remove: function remove(field) {\n      $('.frmb-tt', field).remove();\n    }\n  };\n\n  _helpers.classNames = function (field, previewData) {\n    var i = void 0,\n        type = previewData.type,\n        style = previewData.style;\n    var className = field[0].querySelector('.fld-className').value;\n    var classes = className.split(' ');\n    var types = {\n      button: 'btn',\n      submit: 'btn'\n    };\n\n    var primaryType = types[type];\n\n    if (primaryType) {\n      if (style) {\n        for (i = 0; i < classes.length; i++) {\n          var re = new RegExp('(?:^|\\s)' + primaryType + '-(.*?)(?:\\s|$)+', 'g');\n          var match = classes[i].match(re);\n          if (match) {\n            classes.splice(i, 1);\n          }\n        }\n        classes.push(primaryType + '-' + style);\n      }\n      classes.push(primaryType);\n    }\n\n    // reverse the array to put custom classes at end, remove any duplicates, convert to string, remove whitespace\n    return utils.unique(classes).join(' ').trim();\n  };\n\n  /**\n   * Closes and open dialog\n   *\n   * @param  {Object} overlay Existing overlay if there is one\n   * @param  {Object} dialog  Existing dialog\n   * @return {Event}          Triggers modalClosed event\n   */\n  _helpers.closeConfirm = function (overlay, dialog) {\n    overlay = overlay || document.getElementsByClassName('form-builder-overlay')[0];\n    dialog = dialog || document.getElementsByClassName('form-builder-dialog')[0];\n    overlay.classList.remove('visible');\n    dialog.remove();\n    overlay.remove();\n    document.dispatchEvent(formBuilder.events.modalClosed);\n  };\n\n  /**\n   * Returns the layout data based on controlPosition option\n   * @param  {String} controlPosition 'left' or 'right'\n   * @return {Object}\n   */\n  _helpers.editorLayout = function (controlPosition) {\n    var layoutMap = {\n      left: {\n        stage: 'pull-right',\n        controls: 'pull-left'\n      },\n      right: {\n        stage: 'pull-left',\n        controls: 'pull-right'\n      }\n    };\n\n    return layoutMap[controlPosition] ? layoutMap[controlPosition] : '';\n  };\n\n  /**\n   * Adds overlay to the page. Used for modals.\n   * @return {Object}\n   */\n  _helpers.showOverlay = function () {\n    var overlay = utils.markup('div', null, {\n      className: 'form-builder-overlay'\n    });\n    document.body.appendChild(overlay);\n    overlay.classList.add('visible');\n\n    overlay.onclick = function () {\n      _helpers.closeConfirm(overlay);\n    };\n\n    return overlay;\n  };\n\n  /**\n   * Custom confirmation dialog\n   *\n   * @param  {Object}  message   Content to be displayed in the dialog\n   * @param  {Func}  yesAction callback to fire if they confirm\n   * @param  {Boolean} coords    location to put the dialog\n   * @param  {String}  className Custom class to be added to the dialog\n   * @return {Object}            Reference to the modal\n   */\n  _helpers.confirm = function (message, yesAction) {\n    var coords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var className = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n    var overlay = _helpers.showOverlay();\n    var yes = utils.markup('button', opts.messages.yes, { className: 'yes btn btn-success btn-sm' }),\n        no = utils.markup('button', opts.messages.no, { className: 'no btn btn-danger btn-sm' });\n\n    no.onclick = function () {\n      _helpers.closeConfirm(overlay);\n    };\n\n    yes.onclick = function () {\n      yesAction();\n      _helpers.closeConfirm(overlay);\n    };\n\n    var btnWrap = utils.markup('div', [no, yes], { className: 'button-wrap' });\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = utils.markup('div', [message, btnWrap], { className: className });\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    yes.focus();\n    return miniModal;\n  };\n\n  /**\n   * Popup dialog the does not require confirmation.\n   * @param  {String|DOM|Array}  content\n   * @param  {Boolean} coords    false if no coords are provided. Without coordinates\n   *                             the popup will appear center screen.\n   * @param  {String}  className classname to be added to the dialog\n   * @return {Object}            dom\n   */\n  _helpers.dialog = function (content) {\n    var coords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n    _helpers.showOverlay();\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = utils.markup('div', content, { className: className });\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    document.dispatchEvent(formBuilder.events.modalOpened);\n\n    if (className.indexOf('data-dialog') !== -1) {\n      document.dispatchEvent(formBuilder.events.viewData);\n    }\n\n    return miniModal;\n  };\n\n  /**\n   * Removes all fields from the form\n   */\n  _helpers.removeAllfields = function () {\n    var form = document.getElementById(opts.formID);\n    var fields = form.querySelectorAll('li.form-field');\n    var $fields = $(fields);\n    var markEmptyArray = [];\n\n    if (!fields.length) {\n      return false;\n    }\n\n    if (opts.prepend) {\n      markEmptyArray.push(true);\n    }\n\n    if (opts.append) {\n      markEmptyArray.push(true);\n    }\n\n    if (!markEmptyArray.some(function (elem) {\n      return elem === true;\n    })) {\n      form.parentElement.classList.add('empty');\n      form.parentElement.dataset.content = opts.messages.getStarted;\n    }\n\n    form.classList.add('removing');\n\n    var outerHeight = 0;\n    $fields.each(function () {\n      outerHeight += $(this).outerHeight() + 3;\n    });\n\n    fields[0].style.marginTop = -outerHeight + 'px';\n\n    setTimeout(function () {\n      $fields.remove();\n      document.getElementById(opts.formID).classList.remove('removing');\n      _helpers.save();\n    }, 400);\n  };\n\n  /**\n   * If user re-orders the elements their order should be saved.\n   *\n   * @param {Object} $cbUL our list of elements\n   */\n  _helpers.setFieldOrder = function ($cbUL) {\n    if (!opts.sortableControls) {\n      return false;\n    }\n    var fieldOrder = {};\n    $cbUL.children().each(function (index, element) {\n      fieldOrder[index] = $(element).data('attrs').type;\n    });\n    if (window.sessionStorage) {\n      window.sessionStorage.setItem('fieldOrder', window.JSON.stringify(fieldOrder));\n    }\n  };\n\n  /**\n   * Reorder the controls if the user has previously ordered them.\n   *\n   * @param  {Array} frmbFields\n   * @return {Array}\n   */\n  _helpers.orderFields = function (frmbFields) {\n    var fieldOrder = false;\n\n    if (window.sessionStorage) {\n      if (opts.sortableControls) {\n        fieldOrder = window.sessionStorage.getItem('fieldOrder');\n      } else {\n        window.sessionStorage.removeItem('fieldOrder');\n      }\n    }\n\n    if (!fieldOrder) {\n      var controlOrder = opts.controlOrder.concat(frmbFields.map(function (field) {\n        return field.attrs.type;\n      }));\n      fieldOrder = utils.unique(controlOrder);\n    } else {\n      fieldOrder = window.JSON.parse(fieldOrder);\n      fieldOrder = Object.keys(fieldOrder).map(function (i) {\n        return fieldOrder[i];\n      });\n    }\n\n    var newOrderFields = [];\n\n    fieldOrder.forEach(function (fieldType) {\n      var field = frmbFields.filter(function (field) {\n        return field.attrs.type === fieldType;\n      })[0];\n      newOrderFields.push(field);\n    });\n\n    return newOrderFields.filter(Boolean);\n  };\n\n  /**\n   * Close fields being editing\n   * @param  {Object} stage\n   */\n  _helpers.closeAllEdit = function (stage) {\n    var fields = $('> li.editing', stage),\n        toggleBtns = $('.toggle-form', stage),\n        editModes = $('.frm-holder', fields);\n\n    toggleBtns.removeClass('open');\n    fields.removeClass('editing');\n    editModes.hide();\n    $('.prev-holder', fields).show();\n  };\n\n  /**\n   * Toggles the edit mode for the given field\n   * @param  {String} fieldId\n   */\n  _helpers.toggleEdit = function (fieldId) {\n    var field = document.getElementById(fieldId),\n        toggleBtn = $('.toggle-form', field),\n        editMode = $('.frm-holder', field);\n    field.classList.toggle('editing');\n    toggleBtn.toggleClass('open');\n    $('.prev-holder', field).slideToggle(250);\n    editMode.slideToggle(250);\n  };\n\n  /**\n   * Controls follow scroll to the bottom of the editor\n   * @param  {Object} $sortableFields\n   * @param  {Object} cbUL\n   */\n  _helpers.stickyControls = function ($sortableFields, cbUL) {\n\n    var $cbWrap = $(cbUL).parent(),\n        $stageWrap = $sortableFields.parent(),\n        cbWidth = $cbWrap.width(),\n        cbPosition = cbUL.getBoundingClientRect();\n\n    $(window).scroll(function () {\n\n      var scrollTop = $(this).scrollTop();\n\n      if (scrollTop > $stageWrap.offset().top) {\n\n        var cbStyle = {\n          position: 'fixed',\n          width: cbWidth,\n          top: 0,\n          bottom: 'auto',\n          right: 'auto',\n          left: cbPosition.left\n        };\n\n        var cbOffset = $cbWrap.offset(),\n            stageOffset = $stageWrap.offset(),\n            cbBottom = cbOffset.top + $cbWrap.height(),\n            stageBottom = stageOffset.top + $stageWrap.height();\n\n        if (cbBottom > stageBottom && cbOffset.top !== stageOffset.top) {\n          $cbWrap.css({\n            position: 'absolute',\n            top: 'auto',\n            bottom: 0,\n            right: 0,\n            left: 'auto'\n          });\n        }\n\n        if (cbBottom < stageBottom || cbBottom === stageBottom && cbOffset.top > scrollTop) {\n          $cbWrap.css(cbStyle);\n        }\n      } else {\n        cbUL.parentElement.removeAttribute('style');\n      }\n    });\n  };\n\n  /**\n   * Open a dialog with the form's data\n   */\n  _helpers.showData = function () {\n    var data = utils.escapeHtml(formBuilder.formData),\n        code = utils.markup('code', data, { className: 'formData-' + opts.dataType }),\n        pre = utils.markup('pre', code);\n\n    _helpers.dialog(pre, null, 'data-dialog');\n  };\n\n  /**\n   * Remove a field from the stage\n   * @param  {String}  fieldID ID of the field to be removed\n   * @return {Boolean} fieldRemoved returns true if field is removed\n   */\n  _helpers.removeField = function (fieldID) {\n    var fieldRemoved = false,\n        form = document.getElementById(opts.formID),\n        fields = form.getElementsByClassName('form-field');\n\n    if (!fields.length) {\n      console.warn('No fields to remove');\n      return false;\n    }\n\n    if (!fieldID) {\n      var availableIds = [].slice.call(fields).map(function (field) {\n        return field.id;\n      });\n      console.warn('fieldID required to use `removeField` action.');\n      console.warn('Available IDs: ' + availableIds.join(', '));\n    }\n\n    var field = document.getElementById(fieldID),\n        $field = $(field);\n    if (!field) {\n      console.warn('Field not found');\n      return false;\n    }\n\n    $field.slideUp(250, function () {\n      $field.removeClass('deleting');\n      $field.remove();\n      fieldRemoved = true;\n      _helpers.save();\n      if (!form.childNodes.length) {\n        var stageWrap = form.parentElement;\n        stageWrap.classList.add('empty');\n        stageWrap.dataset.content = opts.messages.getStarted;\n      }\n    });\n\n    document.dispatchEvent(formBuilder.events.fieldRemoved);\n    return fieldRemoved;\n  };\n\n  return _helpers;\n}\n'use strict';\n\nfunction formBuilderEventsFn() {\n  'use strict';\n\n  var events = {};\n\n  events.loaded = new Event('loaded');\n  events.viewData = new Event('viewData');\n  events.userDeclined = new Event('userDeclined');\n  events.modalClosed = new Event('modalClosed');\n  events.modalOpened = new Event('modalOpened');\n  events.formSaved = new Event('formSaved');\n  events.fieldAdded = new Event('fieldAdded');\n  events.fieldRemoved = new Event('fieldRemoved');\n\n  return events;\n}\n'use strict';\n\n(function ($) {\n  'use strict';\n\n  var Toggle = function Toggle(element, options) {\n\n    var defaults = {\n      theme: 'fresh',\n      messages: {\n        off: 'Off',\n        on: 'On'\n      }\n    };\n\n    var opts = $.extend(defaults, options),\n        $kcToggle = $('<div class=\"kc-toggle\"/>').insertAfter(element).append(element);\n\n    $kcToggle.toggleClass('on', element.is(':checked'));\n\n    var kctOn = '<div class=\"kct-on\">' + opts.messages.on + '</div>',\n        kctOff = '<div class=\"kct-off\">' + opts.messages.off + '</div>',\n        kctHandle = '<div class=\"kct-handle\"></div>',\n        kctInner = '<div class=\"kct-inner\">' + kctOn + kctHandle + kctOff + '</div>';\n\n    $kcToggle.append(kctInner);\n\n    $kcToggle.click(function () {\n      element.attr('checked', !element.attr('checked'));\n      $(this).toggleClass('on');\n    });\n  };\n\n  $.fn.kcToggle = function (options) {\n    var toggle = this;\n    return toggle.each(function () {\n      var element = $(this);\n      if (element.data('kcToggle')) {\n        return;\n      }\n      var kcToggle = new Toggle(element, options);\n      element.data('kcToggle', kcToggle);\n    });\n  };\n})(jQuery);\n'use strict';\n\n(function ($) {\n  var FormBuilder = function FormBuilder(options, element) {\n    var formBuilder = this;\n\n    var defaults = {\n      controlPosition: 'right',\n      controlOrder: ['autocomplete', 'button', 'checkbox', 'checkbox-group', 'date', 'file', 'header', 'hidden', 'paragraph', 'number', 'radio-group', 'select', 'text', 'textarea'],\n      dataType: 'xml',\n      // Array of fields to disable\n      disableFields: [],\n      editOnAdd: false,\n      // Uneditable fields or other content you would like to appear before and after regular fields:\n      append: false,\n      prepend: false,\n      // array of objects with fields values\n      // ex:\n      // defaultFields: [{\n      //   label: 'First Name',\n      //   name: 'first-name',\n      //   required: 'true',\n      //   description: 'Your first name',\n      //   type: 'text'\n      // }, {\n      //   label: 'Phone',\n      //   name: 'phone',\n      //   description: 'How can we reach you?',\n      //   type: 'text'\n      // }],\n      defaultFields: [],\n      inputSets: [],\n      fieldRemoveWarn: false,\n      roles: {\n        1: 'Administrator'\n      },\n      messages: {\n        addOption: 'Add Option +',\n        allFieldsRemoved: 'All fields were removed.',\n        allowSelect: 'Allow Select',\n        allowMultipleFiles: 'Allow users to upload multiple files',\n        autocomplete: 'Autocomplete',\n        button: 'Button',\n        cannotBeEmpty: 'This field cannot be empty',\n        checkboxGroup: 'Checkbox Group',\n        checkbox: 'Checkbox',\n        checkboxes: 'Checkboxes',\n        className: 'Class',\n        clearAllMessage: 'Are you sure you want to clear all fields?',\n        clearAll: 'Clear',\n        close: 'Close',\n        content: 'Content',\n        copy: 'Copy To Clipboard',\n        copyButton: '&#43;',\n        copyButtonTooltip: 'Copy',\n        dateField: 'Date Field',\n        description: 'Help Text',\n        descriptionField: 'Description',\n        devMode: 'Developer Mode',\n        editNames: 'Edit Names',\n        editorTitle: 'Form Elements',\n        editXML: 'Edit XML',\n        enableOther: 'Enable &quot;Other&quot;',\n        enableOtherMsg: 'Let users to enter an unlisted option',\n        fieldDeleteWarning: false,\n        fieldVars: 'Field Variables',\n        fieldNonEditable: 'This field cannot be edited.',\n        fieldRemoveWarning: 'Are you sure you want to remove this field?',\n        fileUpload: 'File Upload',\n        formUpdated: 'Form Updated',\n        getStarted: 'Drag a field from the right to this area',\n        header: 'Header',\n        hide: 'Edit',\n        hidden: 'Hidden Input',\n        label: 'Label',\n        labelEmpty: 'Field Label cannot be empty',\n        limitRole: 'Limit access to one or more of the following roles:',\n        mandatory: 'Mandatory',\n        maxlength: 'Max Length',\n        minOptionMessage: 'This field requires a minimum of 2 options',\n        multipleFiles: 'Multiple Files',\n        name: 'Name',\n        no: 'No',\n        number: 'Number',\n        off: 'Off',\n        on: 'On',\n        option: 'Option',\n        optional: 'optional',\n        optionLabelPlaceholder: 'Label',\n        optionValuePlaceholder: 'Value',\n        optionEmpty: 'Option value required',\n        other: 'Other',\n        paragraph: 'Paragraph',\n        placeholder: 'Placeholder',\n        placeholders: {\n          value: 'Value',\n          label: 'Label',\n          text: '',\n          textarea: '',\n          email: 'Enter you email',\n          placeholder: '',\n          className: 'space separated classes',\n          password: 'Enter your password'\n        },\n        preview: 'Preview',\n        radioGroup: 'Radio Group',\n        radio: 'Radio',\n        removeMessage: 'Remove Element',\n        removeOption: 'Remove Option',\n        remove: '&#215;',\n        required: 'Required',\n        richText: 'Rich Text Editor',\n        roles: 'Access',\n        save: 'Save',\n        selectOptions: 'Options',\n        select: 'Select',\n        selectColor: 'Select Color',\n        selectionsMessage: 'Allow Multiple Selections',\n        size: 'Size',\n        sizes: {\n          xs: 'Extra Small',\n          sm: 'Small',\n          m: 'Default',\n          lg: 'Large'\n        },\n        style: 'Style',\n        styles: {\n          btn: {\n            'default': 'Default',\n            danger: 'Danger',\n            info: 'Info',\n            primary: 'Primary',\n            success: 'Success',\n            warning: 'Warning'\n          }\n        },\n        subtype: 'Type',\n        text: 'Text Field',\n        textArea: 'Text Area',\n        toggle: 'Toggle',\n        warning: 'Warning!',\n        value: 'Value',\n        viewJSON: '{  }',\n        viewXML: '&lt;/&gt;',\n        yes: 'Yes'\n      },\n      notify: {\n        error: function error(message) {\n          return console.error(message);\n        },\n        success: function success(message) {\n          return console.log(message);\n        },\n        warning: function warning(message) {\n          return console.warn(message);\n        }\n      },\n      sortableControls: false,\n      stickyControls: false,\n      showActionButtons: true,\n      typeUserAttrs: {},\n      typeUserEvents: {},\n      prefix: 'form-builder-'\n    };\n\n    var utils = fbUtils;\n\n    defaults.messages.subtypes = function () {\n      var subtypeDefault = function subtypeDefault(subtype) {\n        return {\n          label: subtype,\n          value: subtype\n        };\n      };\n\n      return {\n        text: ['text', 'password', 'email', 'color', 'tel'].map(subtypeDefault),\n        header: ['h1', 'h2', 'h3'].map(subtypeDefault),\n        button: ['button', 'submit', 'reset'].map(subtypeDefault),\n        paragraph: ['p', 'address', 'blockquote', 'canvas', 'output'].map(subtypeDefault)\n      };\n    }();\n\n    var opts = Object.assign({}, defaults, options),\n        frmbID = 'frmb-' + $('ul[id^=frmb-]').length++;\n\n    if (options.messages) {\n      opts.messages = Object.assign({}, defaults.messages, options.messages);\n    }\n\n    opts.formID = frmbID;\n\n    formBuilder.element = element;\n\n    var $sortableFields = $('<ul/>').attr('id', frmbID).addClass('frmb');\n    var _helpers = formBuilderHelpersFn(opts, formBuilder);\n\n    formBuilder.layout = _helpers.editorLayout(opts.controlPosition);\n\n    var lastID = frmbID + '-fld-1',\n        boxID = frmbID + '-control-box';\n\n    // create array of field objects to cycle through\n    var frmbFields = [{\n      label: opts.messages.autocomplete,\n      attrs: {\n        type: 'autocomplete',\n        className: 'autocomplete',\n        name: 'autocomplete'\n      }\n    }, {\n      label: opts.messages.button,\n      attrs: {\n        type: 'button',\n        className: 'button-input',\n        name: 'button'\n      }\n    }, {\n      label: opts.messages.checkbox,\n      attrs: {\n        type: 'checkbox',\n        className: 'checkbox',\n        name: 'checkbox'\n      }\n    }, {\n      label: opts.messages.checkboxGroup,\n      attrs: {\n        type: 'checkbox-group',\n        className: 'checkbox-group',\n        name: 'checkbox-group'\n      }\n    }, {\n      label: opts.messages.dateField,\n      attrs: {\n        type: 'date',\n        className: 'calendar',\n        name: 'date-input'\n      }\n    }, {\n      label: opts.messages.fileUpload,\n      attrs: {\n        type: 'file',\n        className: 'file-input',\n        name: 'file-input'\n      }\n    }, {\n      label: opts.messages.header,\n      attrs: {\n        type: 'header',\n        className: 'header'\n      }\n    }, {\n      label: opts.messages.hidden,\n      attrs: {\n        type: 'hidden',\n        className: 'hidden-input',\n        name: 'hidden-input'\n      }\n    }, {\n      label: opts.messages.number,\n      attrs: {\n        type: 'number',\n        className: 'number',\n        name: 'number'\n      }\n    }, {\n      label: opts.messages.paragraph,\n      attrs: {\n        type: 'paragraph',\n        className: 'paragraph'\n      }\n    }, {\n      label: opts.messages.radioGroup,\n      attrs: {\n        type: 'radio-group',\n        className: 'radio-group',\n        name: 'radio-group'\n      }\n    }, {\n      label: opts.messages.select,\n      attrs: {\n        type: 'select',\n        className: 'select',\n        name: 'select'\n      }\n    }, {\n      label: opts.messages.text,\n      attrs: {\n        type: 'text',\n        className: 'text-input',\n        name: 'text-input'\n      }\n    }, {\n      label: opts.messages.textArea,\n      attrs: {\n        type: 'textarea',\n        className: 'text-area',\n        name: 'textarea'\n      }\n    }];\n\n    frmbFields = _helpers.orderFields(frmbFields);\n\n    if (opts.disableFields) {\n      // remove disabledFields\n      frmbFields = frmbFields.filter(function (field) {\n        return !utils.inArray(field.attrs.type, opts.disableFields);\n      });\n    }\n\n    // Create draggable fields for formBuilder\n    var cbUl = utils.markup('ul', null, { id: boxID, className: 'frmb-control' });\n\n    if (opts.sortableControls) {\n      cbUl.classList.add('sort-enabled');\n    }\n\n    var $cbUL = $(cbUl);\n\n    // Loop through\n    utils.forEach(frmbFields, function (i) {\n      var $field = $('<li/>', {\n        'class': 'icon-' + frmbFields[i].attrs.className,\n        'type': frmbFields[i].type,\n        'name': frmbFields[i].className,\n        'label': frmbFields[i].label\n      });\n\n      $field.data('newFieldData', frmbFields[i]);\n\n      var typeLabel = utils.markup('span', frmbFields[i].label);\n      $field.html(typeLabel).appendTo($cbUL);\n    });\n\n    if (opts.inputSets.length) {\n      $('<li/>', { 'class': 'fb-separator' }).html('<hr>').appendTo($cbUL);\n      opts.inputSets.forEach(function (set) {\n        set.name = set.name || _helpers.makeClassName(set.label);\n        var $set = $('<li/>', { 'class': 'input-set-control', type: set.name });\n        $set.html(set.label).appendTo($cbUL);\n      });\n    }\n\n    // Sortable fields\n    $sortableFields.sortable({\n      cursor: 'move',\n      opacity: 0.9,\n      revert: 150,\n      beforeStop: _helpers.beforeStop,\n      start: _helpers.startMoving,\n      stop: _helpers.stopMoving,\n      cancel: 'input, select, .disabled, .form-group, .btn',\n      placeholder: 'frmb-placeholder'\n    });\n\n    // ControlBox with different fields\n    $cbUL.sortable({\n      helper: 'clone',\n      opacity: 0.9,\n      connectWith: $sortableFields,\n      cancel: '.fb-separator',\n      cursor: 'move',\n      scroll: false,\n      placeholder: 'ui-state-highlight',\n      start: _helpers.startMoving,\n      stop: _helpers.stopMoving,\n      revert: 150,\n      beforeStop: _helpers.beforeStop,\n      distance: 3,\n      update: function update(event, ui) {\n        if (_helpers.doCancel) {\n          return false;\n        }\n        if (ui.item.parent()[0] === $sortableFields[0]) {\n          processControl(ui.item);\n          _helpers.doCancel = true;\n        } else {\n          _helpers.setFieldOrder($cbUL);\n          _helpers.doCancel = !opts.sortableControls;\n        }\n      }\n    });\n\n    var processControl = function processControl(control) {\n      if (control[0].classList.contains('input-set-control')) {\n        var inputSet = opts.inputSets.filter(function (set) {\n          return set.name === control[0].type;\n        })[0];\n        if (inputSet.showHeader) {\n          var header = {\n            type: 'header',\n            subtype: 'h2',\n            id: inputSet.name,\n            label: inputSet.label\n          };\n          prepFieldVars(header, true);\n        }\n        inputSet.fields.forEach(function (field) {\n          prepFieldVars(field, true);\n        });\n      } else {\n        prepFieldVars(control, true);\n      }\n    };\n\n    var $formWrap = $('<div/>', {\n      id: frmbID + '-form-wrap',\n      'class': 'form-wrap form-builder' + _helpers.mobileClass()\n    });\n\n    var $stageWrap = $('<div/>', {\n      id: frmbID + '-stage-wrap',\n      'class': 'stage-wrap ' + formBuilder.layout.stage\n    });\n\n    var cbWrap = $('<div/>', {\n      id: frmbID + '-cb-wrap',\n      'class': 'cb-wrap ' + formBuilder.layout.controls\n    }).append($cbUL[0]);\n\n    if (opts.showActionButtons) {\n      // Build our headers and action links\n      var viewDataText = opts.dataType === 'xml' ? opts.messages.viewXML : opts.messages.viewJSON,\n          viewData = utils.markup('button', viewDataText, {\n        id: frmbID + '-view-data',\n        type: 'button',\n        className: 'view-data btn btn-default'\n      }),\n          clearAll = utils.markup('button', opts.messages.clearAll, {\n        id: frmbID + '-clear-all',\n        type: 'button',\n        className: 'clear-all btn btn-default'\n      }),\n          saveAll = utils.markup('button', opts.messages.save, {\n        className: 'btn btn-primary ' + opts.prefix + 'save',\n        id: frmbID + '-save',\n        type: 'button'\n      }),\n          formActions = utils.markup('div', [clearAll, viewData, saveAll], {\n        className: 'form-actions btn-group'\n      });\n\n      cbWrap.append(formActions);\n    }\n\n    $stageWrap.append($sortableFields, cbWrap);\n    $stageWrap.before($formWrap);\n    $formWrap.append($stageWrap, cbWrap);\n    $(element).append($formWrap);\n\n    var saveAndUpdate = _helpers.debounce(function (evt) {\n      if (evt) {\n        if (evt.type === 'keyup' && this.name === 'className') {\n          return false;\n        }\n      }\n\n      var $field = $(this).parents('.form-field:eq(0)');\n      _helpers.updatePreview($field);\n      _helpers.save();\n    });\n\n    // Save field on change\n    $sortableFields.on('change blur keyup', '.form-elements input, .form-elements select, .form-elements textarea', saveAndUpdate);\n\n    $('li', $cbUL).click(function () {\n      _helpers.stopIndex = undefined;\n      processControl($(this));\n      _helpers.save();\n    });\n\n    // Add append and prepend options if necessary\n    var nonEditableFields = function nonEditableFields() {\n      var cancelArray = [];\n\n      if (opts.prepend && !$('.disabled.prepend', $sortableFields).length) {\n        var prependedField = utils.markup('li', opts.prepend, { className: 'disabled prepend' });\n        cancelArray.push(true);\n        $sortableFields.prepend(prependedField);\n      }\n\n      if (opts.append && !$('.disabled.append', $sortableFields).length) {\n        var appendedField = utils.markup('li', opts.append, { className: 'disabled append' });\n        cancelArray.push(true);\n        $sortableFields.append(appendedField);\n      }\n\n      if (cancelArray.some(function (elem) {\n        return elem === true;\n      })) {\n        $stageWrap.removeClass('empty');\n      }\n    };\n\n    var prepFieldVars = function prepFieldVars($field) {\n      var isNew = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var field = {};\n      if ($field instanceof jQuery) {\n        var fieldData = $field.data('newFieldData');\n        if (fieldData) {\n          field = fieldData.attrs;\n          field.label = fieldData.label;\n        } else {\n          var attrs = $field[0].attributes;\n          if (!isNew) {\n            field.values = $field.children().map(function (index, elem) {\n              return {\n                label: $(elem).text(),\n                value: $(elem).attr('value'),\n                selected: Boolean($(elem).attr('selected'))\n              };\n            });\n          }\n\n          for (var i = attrs.length - 1; i >= 0; i--) {\n            field[attrs[i].name] = attrs[i].value;\n          }\n        }\n      } else {\n        field = Object.assign({}, $field);\n      }\n\n      field.name = isNew ? nameAttr(field) : field.name || nameAttr(field);\n\n      if (isNew && utils.inArray(field.type, ['text', 'number', 'file', 'select', 'textarea'])) {\n        field.className = 'form-control'; // backwards compatibility\n      } else {\n        field.className = field.class || field.className; // backwards compatibility\n      }\n\n      var match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(field.className);\n      if (match) {\n        field.style = match[1];\n      }\n\n      utils.escapeAttrs(field);\n\n      appendNewField(field);\n      if (isNew) {\n        document.dispatchEvent(formBuilder.events.fieldAdded);\n      }\n      $stageWrap.removeClass('empty');\n    };\n\n    // Parse saved XML template data\n    var loadFields = function loadFields() {\n      var formData = formBuilder.formData;\n      if (formData && formData.length) {\n        for (var i = 0; i < formData.length; i++) {\n          prepFieldVars(formData[i]);\n        }\n        $stageWrap.removeClass('empty');\n      } else if (opts.defaultFields && opts.defaultFields.length) {\n        // Load default fields if none are set\n        opts.defaultFields.forEach(function (field) {\n          return prepFieldVars(field);\n        });\n        $stageWrap.removeClass('empty');\n      } else if (!opts.prepend && !opts.append) {\n        $stageWrap.addClass('empty').attr('data-content', opts.messages.getStarted);\n      }\n      _helpers.save();\n\n      $('li.form-field:not(.disabled)', $sortableFields).each(function () {\n        _helpers.updatePreview($(this));\n      });\n\n      nonEditableFields();\n    };\n\n    // callback to track disabled tooltips\n    $sortableFields.on('mousemove', 'li.disabled', function (e) {\n      $('.frmb-tt', this).css({\n        left: e.offsetX - 16,\n        top: e.offsetY - 34\n      });\n    });\n\n    // callback to call disabled tooltips\n    $sortableFields.on('mouseenter', 'li.disabled', function () {\n      _helpers.disabledTT.add($(this));\n    });\n\n    // callback to call disabled tooltips\n    $sortableFields.on('mouseleave', 'li.disabled', function () {\n      _helpers.disabledTT.remove($(this));\n    });\n\n    var nameAttr = function nameAttr(field) {\n      var epoch = new Date().getTime();\n      return field.type + '-' + epoch;\n    };\n\n    /**\r\n     * Add data for field with options [select, checkbox-group, radio-group]\r\n     *\r\n     * @todo   refactor this nasty ~crap~ code, its actually painful to look at\r\n     * @param  {object} values\r\n     */\n    var fieldOptions = function fieldOptions(values) {\n      var optionActions = [utils.markup('a', opts.messages.addOption, { className: 'add add-opt' })],\n          fieldOptions = ['<label class=\"false-label\">' + opts.messages.selectOptions + '</label>'],\n          isMultiple = values.multiple || values.type === 'checkbox-group';\n\n      if (!values.values || !values.values.length) {\n        values.values = [1, 2, 3].map(function (index) {\n          var label = opts.messages.option + ' ' + index;\n          var option = {\n            selected: false,\n            label: label,\n            value: utils.hyphenCase(label)\n          };\n          return option;\n        });\n        values.values[0].selected = true;\n      } else {\n        // ensure option data is has all required keys\n        values.values.forEach(function (option) {\n          return Object.assign({}, { selected: false }, option);\n        });\n      }\n\n      fieldOptions.push('<div class=\"sortable-options-wrap\">');\n\n      fieldOptions.push('<ol class=\"sortable-options\">');\n      utils.forEach(values.values, function (i) {\n        fieldOptions.push(selectFieldOptions(values.name, values.values[i], isMultiple));\n      });\n      fieldOptions.push('</ol>');\n      fieldOptions.push(utils.markup('div', optionActions, { className: 'option-actions' }).outerHTML);\n      fieldOptions.push('</div>');\n\n      return utils.markup('div', fieldOptions.join(''), { className: 'form-group field-options' }).outerHTML;\n    };\n\n    /**\r\n     * Build the editable properties for the field\r\n     * @param  {object} values configuration object for advanced fields\r\n     * @return {String}        markup for advanced fields\r\n     */\n    var advFields = function advFields(values) {\n      var advFields = [],\n          key,\n          optionFields = ['select', 'checkbox-group', 'radio-group'],\n          isOptionField = function () {\n        return optionFields.indexOf(values.type) !== -1;\n      }(),\n          valueField = !utils.inArray(values.type, ['header', 'paragraph', 'file'].concat(optionFields)),\n          roles = values.role !== undefined ? values.role.split(',') : [];\n\n      advFields.push(requiredField(values));\n\n      if (values.type === 'checkbox') {\n        advFields.push(boolAttribute('toggle', values, { first: opts.messages.toggle }));\n      }\n\n      advFields.push(textAttribute('label', values));\n\n      values.size = values.size || 'm';\n      values.style = values.style || 'default';\n\n      //Help Text / Description Field\n      if (!utils.inArray(values.type, ['header', 'paragraph', 'button'])) {\n        advFields.push(textAttribute('description', values));\n      }\n\n      if (opts.messages.subtypes[values.type]) {\n        var optionData = opts.messages.subtypes[values.type];\n        advFields.push(selectAttribute('subtype', values, optionData));\n      }\n\n      if (values.type === 'button') {\n        advFields.push(btnStyles(values.style, values.type));\n      }\n\n      if (values.type === 'number') {\n        advFields.push(numberAttribute('min', values));\n        advFields.push(numberAttribute('max', values));\n        advFields.push(numberAttribute('step', values));\n      }\n\n      // Placeholder\n      advFields.push(textAttribute('placeholder', values));\n\n      //TextArea Rows Attribute\n      if (values.type === 'textarea') {\n        advFields.push(numberAttribute('rows', values));\n      }\n\n      // Class\n      advFields.push(textAttribute('className', values));\n\n      advFields.push(textAttribute('name', values));\n\n      if (valueField) {\n        advFields.push(textAttribute('value', values));\n      }\n\n      if (values.type === 'file') {\n        var labels = {\n          first: opts.messages.multipleFiles,\n          second: opts.messages.allowMultipleFiles\n        };\n        advFields.push(boolAttribute('multiple', values, labels));\n      }\n\n      var rolesDisplay = values.role !== undefined ? 'style=\"display:block\"' : '';\n      var availableRoles = ['<div class=\"available-roles\" ' + rolesDisplay + '>'];\n      for (key in opts.roles) {\n        if (opts.roles.hasOwnProperty(key)) {\n          var checked = utils.inArray(key, roles) ? 'checked' : '',\n              roleId = 'fld-' + lastID + '-roles-' + key;\n          availableRoles.push('<input type=\"checkbox\" name=\"roles[]\" value=\"' + key + '\" id=\"' + roleId + '\" ' + checked + ' class=\"roles-field\" /> <label for=\"' + roleId + '\">' + opts.roles[key] + '</label><br/>');\n        }\n      }\n\n      availableRoles.push('</div>');\n\n      var accessLabels = { first: opts.messages.roles, second: opts.messages.limitRole, content: availableRoles.join('') };\n\n      advFields.push(boolAttribute('access', values, accessLabels));\n\n      if (values.type === 'checkbox-group' || values.type === 'radio-group') {\n        advFields.push(boolAttribute('other', values, { first: opts.messages.enableOther, second: opts.messages.enableOtherMsg }));\n      }\n\n      if (values.type === 'select') {\n        advFields.push(boolAttribute('multiple', values, { first: ' ', second: opts.messages.selectionsMessage }));\n      }\n\n      if (isOptionField) {\n        advFields.push(fieldOptions(values));\n      }\n\n      if (utils.inArray(values.type, ['text', 'textarea'])) {\n        advFields.push(numberAttribute('maxlength', values));\n      }\n\n      // Append custom attributes as defined in typeUserAttrs option\n      if (opts.typeUserAttrs[values.type]) {\n        advFields.push(processTypeUserAttrs(opts.typeUserAttrs[values.type], values));\n      }\n\n      return advFields.join('');\n    };\n\n    function processTypeUserAttrs(typeUserAttr, values) {\n      var advField = [];\n\n      for (var attribute in typeUserAttr) {\n        if (typeUserAttr.hasOwnProperty(attribute)) {\n          var orig = opts.messages[attribute];\n          var origValue = typeUserAttr[attribute].value;\n          typeUserAttr[attribute].value = values[attribute] || typeUserAttr[attribute].value || '';\n\n          if (typeUserAttr[attribute].label) {\n            opts.messages[attribute] = typeUserAttr[attribute].label;\n          }\n\n          if (typeUserAttr[attribute].options) {\n            advField.push(selectUserAttrs(attribute, typeUserAttr[attribute]));\n          } else {\n            advField.push(inputUserAttrs(attribute, typeUserAttr[attribute]));\n          }\n\n          opts.messages[attribute] = orig;\n          typeUserAttr[attribute].value = origValue;\n        }\n      }\n\n      return advField.join('');\n    }\n\n    function inputUserAttrs(name, attrs) {\n      var textAttrs = {\n        id: name + '-' + lastID,\n        title: attrs.description || attrs.label || name.toUpperCase(),\n        name: name,\n        type: attrs.type || 'text',\n        className: ['fld-' + name]\n      },\n          label = '<label for=\"' + textAttrs.id + '\">' + opts.messages[name] + '</label>';\n\n      if (!utils.inArray(textAttrs.type, ['checkbox', 'checkbox-group', 'radio-group'])) {\n        textAttrs.className.push('form-control');\n      }\n\n      textAttrs = Object.assign({}, attrs, textAttrs);\n      var textInput = '<input ' + utils.attrString(textAttrs) + '>',\n          inputWrap = '<div class=\"input-wrap\">' + textInput + '</div>';\n      return '<div class=\"form-group ' + name + '-wrap\">' + label + inputWrap + '</div>';\n    }\n\n    function selectUserAttrs(name, options) {\n      var optis = Object.keys(options.options).map(function (val) {\n        var attrs = { value: val };\n        if (val === options.value) {\n          attrs.selected = null;\n        }\n        return '<option ' + utils.attrString(attrs) + '>' + options.options[val] + '</option>';\n      }),\n          selectAttrs = {\n        id: name + '-' + lastID,\n        title: options.description || options.label || name.toUpperCase(),\n        name: name,\n        className: 'fld-' + name + ' form-control'\n      },\n          label = '<label for=\"' + selectAttrs.id + '\">' + opts.messages[name] + '</label>';\n\n      Object.keys(options).filter(function (prop) {\n        return !utils.inArray(prop, ['value', 'options', 'label']);\n      }).forEach(function (attr) {\n        selectAttrs[attr] = options[attr];\n      });\n\n      var select = '<select ' + utils.attrString(selectAttrs) + '>' + optis.join('') + '</select>',\n          inputWrap = '<div class=\"input-wrap\">' + select + '</div>';\n      return '<div class=\"form-group ' + name + '-wrap\">' + label + inputWrap + '</div>';\n    }\n\n    var boolAttribute = function boolAttribute(name, values, labels) {\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][name]) {\n        return;\n      }\n\n      var label = function label(txt) {\n        return '<label for=\"' + name + '-' + lastID + '\">' + txt + '</label>';\n      },\n          checked = values[name] !== undefined ? 'checked' : '',\n          input = '<input type=\"checkbox\" class=\"fld-' + name + '\" name=\"' + name + '\" value=\"true\" ' + checked + ' id=\"' + name + '-' + lastID + '\"/> ',\n          left = [],\n          right = [input];\n\n      if (labels.first) {\n        left.unshift(label(labels.first));\n      }\n\n      if (labels.second) {\n        right.push(label(labels.second));\n      }\n\n      if (labels.content) {\n        right.push(labels.content);\n      }\n\n      right.unshift('<div class=\"input-wrap\">');\n      right.push('</div>');\n\n      return '<div class=\"form-group ' + name + '-wrap\">' + left.concat(right).join('') + '</div>';\n    };\n\n    var btnStyles = function btnStyles(style, type) {\n      var tags = {\n        button: 'btn'\n      },\n          styles = opts.messages.styles[tags[type]],\n          styleField = '';\n\n      if (styles) {\n        var styleLabel = '<label>' + opts.messages.style + '</label>';\n        styleField += '<input value=\"' + style + '\" name=\"style\" type=\"hidden\" class=\"btn-style\">';\n        styleField += '<div class=\"btn-group\" role=\"group\">';\n\n        Object.keys(opts.messages.styles[tags[type]]).forEach(function (element) {\n          var active = style === element ? 'active' : '';\n          styleField += '<button value=\"' + element + '\" type=\"' + type + '\" class=\"' + active + ' btn-xs ' + tags[type] + ' ' + tags[type] + '-' + element + '\">' + opts.messages.styles[tags[type]][element] + '</button>';\n        });\n\n        styleField += '</div>';\n\n        styleField = '<div class=\"form-group style-wrap\">' + styleLabel + ' ' + styleField + '</div>';\n      }\n\n      return styleField;\n    };\n\n    /**\r\n     * Add a number attribute to a field.\r\n     * @param  {String} attribute\r\n     * @param  {Object} values\r\n     * @return {String}\r\n     */\n    var numberAttribute = function numberAttribute(attribute, values) {\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][attribute]) {\n        return;\n      }\n\n      var attrVal = values[attribute],\n          attrLabel = opts.messages[attribute] || attribute,\n          placeholder = opts.messages.placeholders[attribute],\n          inputConfig = {\n        type: 'number',\n        value: attrVal,\n        name: attribute,\n        min: '0',\n        placeholder: placeholder,\n        className: 'fld-' + attribute + ' form-control',\n        id: attribute + '-' + lastID\n      },\n          numberAttribute = '<input ' + utils.attrString(utils.trimObj(inputConfig)) + '>',\n          inputWrap = '<div class=\"input-wrap\">' + numberAttribute + '</div>';\n\n      return '<div class=\"form-group ' + attribute + '-wrap\"><label for=\"' + inputConfig.id + '\">' + attrLabel + '</label> ' + inputWrap + '</div>';\n    };\n\n    var selectAttribute = function selectAttribute(attribute, values, optionData) {\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][attribute]) {\n        return;\n      }\n      var selectOptions = optionData.map(function (option, i) {\n        var optionAttrs = Object.assign({\n          label: opts.messages.option + ' ' + i,\n          value: undefined\n        }, option);\n        if (option.value === values[attribute]) {\n          optionAttrs.selected = true;\n        }\n        return '<option ' + utils.attrString(utils.trimObj(optionAttrs)) + '>' + optionAttrs.label + '</option>';\n      }),\n          selectAttrs = {\n        id: attribute + '-' + lastID,\n        name: attribute,\n        className: 'fld-' + attribute + ' form-control'\n      },\n          label = '<label for=\"' + selectAttrs.id + '\">' + (opts.messages[attribute] || utils.capitalize(attribute)) + '</label>';\n\n      var select = '<select ' + utils.attrString(selectAttrs) + '>' + selectOptions.join('') + '</select>',\n          inputWrap = '<div class=\"input-wrap\">' + select + '</div>';\n\n      return '<div class=\"form-group ' + selectAttrs.name + '-wrap\">' + label + inputWrap + '</div>';\n    };\n\n    /**\r\n     * Generate some text inputs for field attributes, **will be replaced**\r\n     * @param  {String} attribute\r\n     * @param  {Object} values\r\n     * @return {String}\r\n     */\n    var textAttribute = function textAttribute(attribute, values) {\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][attribute]) {\n        return;\n      }\n\n      var placeholderFields = ['text', 'textarea', 'select'];\n\n      var noName = ['header'];\n\n      var textArea = ['paragraph'];\n\n      var attrVal = values[attribute] || '',\n          attrLabel = opts.messages[attribute];\n      if (attribute === 'label' && utils.inArray(values.type, textArea)) {\n        attrLabel = opts.messages.content;\n      }\n\n      noName = noName.concat(opts.messages.subtypes.header, textArea);\n\n      var placeholders = opts.messages.placeholders,\n          placeholder = placeholders[attribute] || '',\n          attributefield = '',\n          noMakeAttr = [];\n\n      // Field has placeholder attribute\n      if (attribute === 'placeholder' && !utils.inArray(values.type, placeholderFields)) {\n        noMakeAttr.push(true);\n      }\n\n      // Field has name attribute\n      if (attribute === 'name' && utils.inArray(values.type, noName)) {\n        noMakeAttr.push(true);\n      }\n\n      if (!noMakeAttr.some(function (elem) {\n        return elem === true;\n      })) {\n        var inputConfig = {\n          name: attribute,\n          placeholder: placeholder,\n          className: 'fld-' + attribute + ' form-control',\n          id: attribute + '-' + lastID\n        };\n        var attributeLabel = '<label for=\"' + inputConfig.id + '\">' + attrLabel + '</label>';\n\n        if (attribute === 'label' && utils.inArray(values.type, textArea) || attribute === 'value' && values.type === 'textarea') {\n          attributefield += '<textarea ' + utils.attrString(inputConfig) + '>' + attrVal + '</textarea>';\n        } else {\n          inputConfig.value = attrVal;\n          inputConfig.type = 'text';\n          attributefield += '<input ' + utils.attrString(inputConfig) + '>';\n        }\n\n        var inputWrap = '<div class=\"input-wrap\">' + attributefield + '</div>';\n\n        attributefield = '<div class=\"form-group ' + attribute + '-wrap\">' + attributeLabel + ' ' + inputWrap + '</div>';\n      }\n\n      return attributefield;\n    };\n\n    var requiredField = function requiredField(values) {\n      var noRequire = ['header', 'paragraph', 'button'],\n          noMake = [],\n          requireField = '';\n\n      if (utils.inArray(values.type, noRequire)) {\n        noMake.push(true);\n      }\n      if (!noMake.some(function (elem) {\n        return elem === true;\n      })) {\n        requireField = boolAttribute('required', values, { first: opts.messages.required });\n      }\n\n      return requireField;\n    };\n\n    // Append the new field to the editor\n    var appendNewField = function appendNewField(values) {\n      var type = values.type || 'text',\n          label = values.label || opts.messages[type] || opts.messages.label,\n          delBtn = utils.markup('a', opts.messages.remove, {\n        id: 'del_' + lastID,\n        className: 'del-button btn delete-confirm',\n        title: opts.messages.removeMessage\n      }),\n          toggleBtn = utils.markup('a', null, {\n        id: lastID + '-edit',\n        className: 'toggle-form btn icon-pencil',\n        title: opts.messages.hide\n      }),\n          copyBtn = utils.markup('a', opts.messages.copyButton, {\n        id: lastID + '-copy',\n        className: 'copy-button btn icon-copy',\n        title: opts.messages.copyButtonTooltip\n      });\n\n      var liContents = utils.markup('div', [toggleBtn, copyBtn, delBtn], { className: 'field-actions' }).outerHTML;\n\n      // Field preview Label\n      liContents += '<label class=\"field-label\">' + label + '</label>';\n\n      if (values.description) {\n        liContents += '<span class=\"tooltip-element\" tooltip=\"' + values.description + '\">?</span>';\n      }\n\n      var requiredDisplay = values.required ? 'style=\"display:inline\"' : '';\n      liContents += '<span class=\"required-asterisk\" ' + requiredDisplay + '> *</span>';\n\n      liContents += utils.markup('div', '', { className: 'prev-holder' }).outerHTML;\n      liContents += '<div id=\"' + lastID + '-holder\" class=\"frm-holder\">';\n      liContents += '<div class=\"form-elements\">';\n\n      liContents += advFields(values);\n      liContents += utils.markup('a', opts.messages.close, { className: 'close-field' }).outerHTML;\n\n      liContents += '</div>';\n      liContents += '</div>';\n\n      var field = utils.markup('li', liContents, {\n        'class': type + '-field form-field',\n        'type': type,\n        id: lastID\n      }),\n          $li = $(field);\n\n      $li.data('fieldData', { attrs: values });\n      if (typeof _helpers.stopIndex !== 'undefined') {\n        $('> li', $sortableFields).eq(_helpers.stopIndex).before($li);\n      } else {\n        $sortableFields.append($li);\n      }\n\n      $('.sortable-options', $li).sortable({ update: function update() {\n          _helpers.updatePreview($li);\n        } }); // make dynamically added option fields sortable if they exist.\n\n      _helpers.updatePreview($li);\n\n      if (opts.editOnAdd) {\n        _helpers.closeAllEdit($sortableFields);\n        _helpers.toggleEdit(lastID);\n      }\n\n      if (opts.typeUserEvents[type] && opts.typeUserEvents[type].onadd) {\n        opts.typeUserEvents[type].onadd(field);\n      }\n\n      lastID = _helpers.incrementId(lastID);\n    };\n\n    // Select field html, since there may be multiple\n    var selectFieldOptions = function selectFieldOptions(name, optionData, multipleSelect) {\n      var optionInputType = {\n        selected: multipleSelect ? 'checkbox' : 'radio'\n      },\n          optionDataOrder = ['value', 'label', 'selected'],\n          optionInputs = [];\n\n      optionData = Object.assign({ selected: false, label: '', value: '' }, optionData);\n\n      for (var i = optionDataOrder.length - 1; i >= 0; i--) {\n        var prop = optionDataOrder[i];\n        if (optionData.hasOwnProperty(prop)) {\n          var attrs = {\n            type: optionInputType[prop] || 'text',\n            'class': 'option-' + prop,\n            value: optionData[prop],\n            name: name + '-option'\n          };\n\n          if (opts.messages.placeholders[prop]) {\n            attrs.placeholder = opts.messages.placeholders[prop];\n          }\n\n          if (prop === 'selected' && optionData.selected === true) {\n            attrs.checked = optionData.selected;\n          }\n\n          optionInputs.push(utils.markup('input', null, attrs));\n        }\n      }\n\n      var removeAttrs = {\n        className: 'remove btn',\n        title: opts.messages.removeMessage\n      };\n      optionInputs.push(utils.markup('a', opts.messages.remove, removeAttrs));\n\n      var field = utils.markup('li', optionInputs);\n\n      return field.outerHTML;\n    };\n\n    var cloneItem = function cloneItem(currentItem) {\n      var currentId = currentItem.attr('id'),\n          type = currentItem.attr('type'),\n          ts = new Date().getTime(),\n          cloneName = type + '-' + ts;\n\n      var $clone = currentItem.clone();\n\n      $clone.find('[id]').each(function () {\n        this.id = this.id.replace(currentId, lastID);\n      });\n\n      $clone.find('[for]').each(function () {\n        this.setAttribute('for', this.getAttribute('for').replace(currentId, lastID));\n      });\n\n      $clone.each(function () {\n        $('e:not(.form-elements)').each(function () {\n          var newName = this.getAttribute('name');\n          newName = newName.substring(0, newName.lastIndexOf('-') + 1);\n          newName = newName + ts.toString();\n          this.setAttribute('name', newName);\n        });\n      });\n\n      $clone.find('.form-elements').find(':input').each(function () {\n        if (this.getAttribute('name') === 'name') {\n          var newVal = this.getAttribute('value');\n          newVal = newVal.substring(0, newVal.lastIndexOf('-') + 1);\n          newVal = newVal + ts.toString();\n          this.setAttribute('value', newVal);\n        }\n      });\n\n      $clone.attr('id', lastID);\n      $clone.attr('name', cloneName);\n      $clone.addClass('cloned');\n      $('.sortable-options', $clone).sortable();\n\n      if (opts.typeUserEvents[type] && opts.typeUserEvents[type].onclone) {\n        opts.typeUserEvents[type].onclone($clone[0]);\n      }\n\n      lastID = _helpers.incrementId(lastID);\n      return $clone;\n    };\n\n    // ---------------------- UTILITIES ---------------------- //\n\n    // delete options\n    $sortableFields.on('click touchstart', '.remove', function (e) {\n      var $field = $(this).parents('.form-field:eq(0)');\n      e.preventDefault();\n      var optionsCount = $(this).parents('.sortable-options:eq(0)').children('li').length;\n      if (optionsCount <= 2) {\n        opts.notify.error('Error: ' + opts.messages.minOptionMessage);\n      } else {\n        $(this).parent('li').slideUp('250', function () {\n          $(this).remove();\n          _helpers.updatePreview($field);\n          _helpers.save();\n        });\n      }\n    });\n\n    // touch focus\n    $sortableFields.on('touchstart', 'input', function (e) {\n      if (e.handled !== true) {\n        if ($(this).attr('type') === 'checkbox') {\n          $(this).trigger('click');\n        } else {\n          $(this).focus();\n          var fieldVal = $(this).val();\n          $(this).val(fieldVal);\n        }\n      } else {\n        return false;\n      }\n    });\n\n    // toggle fields\n    $sortableFields.on('click touchstart', '.toggle-form, .close-field', function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      if (e.handled !== true) {\n        var targetID = $(this).parents('.form-field:eq(0)').attr('id');\n        _helpers.toggleEdit(targetID);\n        e.handled = true;\n      } else {\n        return false;\n      }\n    });\n\n    $sortableFields.on('change', '.prev-holder input, .prev-holder select', function (e) {\n      if (e.target.classList.contains('other-option')) {\n        return;\n      }\n      var field = $(e.target).closest('li.form-field')[0];\n      if (utils.inArray(field.type, ['select', 'checkbox-group', 'radio-group'])) {\n        field.querySelector('[class=\"option-value\"][value=\"' + e.target.value + '\"]').parentElement.childNodes[0].checked = true;\n      } else {\n        document.getElementById('value-' + field.id).value = e.target.value;\n      }\n\n      _helpers.save();\n    });\n\n    // update preview to label\n    $sortableFields.on('keyup change', '[name=\"label\"]', function () {\n      $('.field-label', $(this).closest('li')).text($(this).val());\n    });\n\n    // remove error styling when users tries to correct mistake\n    $sortableFields.delegate('input.error', 'keyup', function () {\n      $(this).removeClass('error');\n    });\n\n    // update preview for description\n    $sortableFields.on('keyup', 'input[name=\"description\"]', function () {\n      var $field = $(this).parents('.form-field:eq(0)');\n      var closestToolTip = $('.tooltip-element', $field);\n      var ttVal = $(this).val();\n      if (ttVal !== '') {\n        if (!closestToolTip.length) {\n          var tt = '<span class=\"tooltip-element\" tooltip=\"' + ttVal + '\">?</span>';\n          $('.field-label', $field).after(tt);\n        } else {\n          closestToolTip.attr('tooltip', ttVal).css('display', 'inline-block');\n        }\n      } else {\n        if (closestToolTip.length) {\n          closestToolTip.css('display', 'none');\n        }\n      }\n    });\n\n    $sortableFields.on('change', '.fld-multiple', function (e) {\n      var newType = e.target.checked ? 'checkbox' : 'radio';\n\n      $(e.target).parents('.form-elements:eq(0)').find('.sortable-options input.option-selected').each(function () {\n        this.type = newType;\n      });\n    });\n\n    // format name attribute\n    $sortableFields.on('blur', 'input.fld-name', function () {\n      this.value = _helpers.safename(this.value);\n      if (this.value === '') {\n        $(this).addClass('field-error').attr('placeholder', opts.messages.cannotBeEmpty);\n      } else {\n        $(this).removeClass('field-error');\n      }\n    });\n\n    $sortableFields.on('blur', 'input.fld-maxlength', function () {\n      this.value = _helpers.forceNumber(this.value);\n    });\n\n    // Copy field\n    $sortableFields.on('click touchstart', '.icon-copy', function (e) {\n      e.preventDefault();\n      var currentItem = $(this).parent().parent('li');\n      var $clone = cloneItem(currentItem);\n      $clone.insertAfter(currentItem);\n      _helpers.updatePreview($clone);\n      _helpers.save();\n    });\n\n    // Delete field\n    $sortableFields.on('click touchstart', '.delete-confirm', function (e) {\n      e.preventDefault();\n\n      var buttonPosition = this.getBoundingClientRect(),\n          bodyRect = document.body.getBoundingClientRect(),\n          coords = {\n        pageX: buttonPosition.left + buttonPosition.width / 2,\n        pageY: buttonPosition.top - bodyRect.top - 12\n      };\n\n      var deleteID = $(this).parents('.form-field:eq(0)').attr('id'),\n          $field = $(document.getElementById(deleteID));\n\n      document.addEventListener('modalClosed', function () {\n        $field.removeClass('deleting');\n      }, false);\n\n      // Check if user is sure they want to remove the field\n      if (opts.fieldRemoveWarn) {\n        var warnH3 = utils.markup('h3', opts.messages.warning),\n            warnMessage = utils.markup('p', opts.messages.fieldRemoveWarning);\n        _helpers.confirm([warnH3, warnMessage], function () {\n          return _helpers.removeField(deleteID);\n        }, coords);\n        $field.addClass('deleting');\n      } else {\n        _helpers.removeField(deleteID);\n      }\n    });\n\n    // Update button style selection\n    $sortableFields.on('click', '.style-wrap button', function () {\n      var styleVal = $(this).val(),\n          $parent = $(this).parent(),\n          $btnStyle = $parent.prev('.btn-style');\n      $btnStyle.val(styleVal);\n      $(this).siblings('.btn').removeClass('active');\n      $(this).addClass('active');\n      saveAndUpdate.call($parent);\n    });\n\n    // Attach a callback to toggle required asterisk\n    $sortableFields.on('click', 'input.fld-required', function () {\n      var requiredAsterisk = $(this).parents('li.form-field').find('.required-asterisk');\n      requiredAsterisk.toggle();\n    });\n\n    // Attach a callback to toggle roles visibility\n    $sortableFields.on('click', 'input.fld-access', function () {\n      var roles = $(this).parents('li.form-field').find('div.available-roles'),\n          enableRolesCB = $(this);\n      roles.slideToggle(250, function () {\n        if (!enableRolesCB.is(':checked')) {\n          $('input[type=\"checkbox\"]', roles).removeAttr('checked');\n        }\n      });\n    });\n\n    // Attach a callback to add new options\n    $sortableFields.on('click', '.add-opt', function (e) {\n      e.preventDefault();\n      var $optionWrap = $(this).parents('.field-options:eq(0)'),\n          $multiple = $('[name=\"multiple\"]', $optionWrap),\n          $firstOption = $('.option-selected:eq(0)', $optionWrap),\n          isMultiple = false;\n\n      if ($multiple.length) {\n        isMultiple = $multiple.prop('checked');\n      } else {\n        isMultiple = $firstOption.attr('type') === 'checkbox';\n      }\n\n      var name = $firstOption.attr('name');\n\n      $('.sortable-options', $optionWrap).append(selectFieldOptions(name, false, isMultiple));\n    });\n\n    $sortableFields.on('mouseover mouseout', '.remove, .del-button', function () {\n      $(this).parents('li:eq(0)').toggleClass('delete');\n    });\n\n    if (opts.showActionButtons) {\n      // View XML\n      var xmlButton = $(document.getElementById(frmbID + '-view-data'));\n      xmlButton.click(function (e) {\n        e.preventDefault();\n        _helpers.showData();\n      });\n\n      // Clear all fields in form editor\n      var clearButton = $(document.getElementById(frmbID + '-clear-all'));\n      clearButton.click(function () {\n        var fields = $('li.form-field');\n        var buttonPosition = this.getBoundingClientRect(),\n            bodyRect = document.body.getBoundingClientRect(),\n            coords = {\n          pageX: buttonPosition.left + buttonPosition.width / 2,\n          pageY: buttonPosition.top - bodyRect.top - 12\n        };\n\n        if (fields.length) {\n          _helpers.confirm(opts.messages.clearAllMessage, function () {\n            _helpers.removeAllfields();\n            opts.notify.success(opts.messages.allFieldsRemoved);\n            _helpers.save();\n          }, coords);\n        } else {\n          _helpers.dialog('There are no fields to clear', { pageX: coords.pageX, pageY: coords.pageY });\n        }\n      });\n\n      // Save Idea Template\n      $(document.getElementById(frmbID + '-save')).click(function (e) {\n        e.preventDefault();\n        _helpers.save();\n      });\n    }\n\n    _helpers.getData();\n    loadFields();\n\n    $sortableFields.css('min-height', $cbUL.height());\n\n    // If option set, controls will remain in view in editor\n    if (opts.stickyControls) {\n      _helpers.stickyControls($sortableFields, cbUl);\n    }\n\n    document.dispatchEvent(formBuilder.events.loaded);\n\n    // Make actions accessible\n    formBuilder.actions = {\n      clearFields: _helpers.removeAllfields,\n      showData: _helpers.showData,\n      save: _helpers.save,\n      addField: function addField(field, index) {\n        _helpers.stopIndex = $sortableFields[0].children.length ? index : undefined;\n        prepFieldVars(field);\n        document.dispatchEvent(formBuilder.events.fieldAdded);\n      },\n      removeField: _helpers.removeField,\n      setData: function setData(formData) {\n        _helpers.removeAllfields();\n        _helpers.getData(formData);\n        loadFields();\n      }\n    };\n\n    return formBuilder;\n  };\n\n  $.fn.formBuilder = function (options) {\n    options = options || {};\n    return this.each(function () {\n      var formBuilder = new FormBuilder(options, this);\n      $(this).data('formBuilder', formBuilder);\n\n      return formBuilder;\n    });\n  };\n})(jQuery);","'use strict';\n/**\n *\n */\n\nconst fbUtils = {};\n\n// cleaner syntax for testing indexOf element\nfbUtils.inArray = function(needle, haystack) {\n  return haystack.indexOf(needle) !== -1;\n};\n\n/**\n * Remove null or undefined values\n * @param  {Object} attrs {attrName: attrValue}\n * @return {Object}       Object trimmed of null or undefined values\n */\nfbUtils.trimObj = function(attrs) {\n  let xmlRemove = [\n    null,\n    undefined,\n    '',\n    false,\n    'false'\n  ];\n  for (var attr in attrs) {\n    if (fbUtils.inArray(attrs[attr], xmlRemove)) {\n      delete attrs[attr];\n    } else if (Array.isArray(attrs[attr])) {\n      if (!attrs[attr].length) {\n        delete attrs[attr];\n      }\n    }\n  }\n\n  return attrs;\n};\n\n/**\n * Test if attribute is a valid HTML attribute\n * @param  {String} attr\n * @return {Boolean}\n */\nfbUtils.validAttr = function(attr) {\n  let invalid = [\n    'values',\n    'enableOther',\n    'other',\n    'label',\n    // 'style',\n    'subtype'\n  ];\n  return !fbUtils.inArray(attr, invalid);\n};\n\n/**\n * Convert an attrs object into a string\n *\n * @param  {Object} attrs object of attributes for markup\n * @return {string}\n */\nfbUtils.attrString = function(attrs) {\n  let attributes = [];\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr) && fbUtils.validAttr(attr)) {\n      attr = fbUtils.safeAttr(attr, attrs[attr]);\n      attributes.push(attr.name + attr.value);\n    }\n  }\n  return attributes.join(' ');\n};\n\n/**\n * Convert attributes to markup safe strings\n * @param  {String} name  attribute name\n * @param  {String} value attribute value\n * @return {Object}       {attrName: attrValue}\n */\nfbUtils.safeAttr = function(name, value) {\n  name = fbUtils.safeAttrName(name);\n  let valString;\n\n  if (value) {\n    if (Array.isArray(value)) {\n      valString = fbUtils.escapeAttr(value.join(' '))\n    } else {\n      if (typeof(value) === 'boolean') {\n        value = value.toString();\n      }\n      valString = fbUtils.escapeAttr(value.replace(',', ' ').trim());\n    }\n  }\n\n  value = value ? `=\"${valString}\"` : '';\n  return {\n    name,\n    value\n  };\n};\n\nfbUtils.safeAttrName = function(name) {\n  let safeAttr = {\n    className: 'class'\n  };\n\n  return safeAttr[name] || fbUtils.hyphenCase(name);\n};\n\n/**\n * Convert strings into lowercase-hyphen\n *\n * @param  {String} str\n * @return {String}\n */\nfbUtils.hyphenCase = (str) => {\n  str = str.replace(/[^\\w\\s\\-]/gi, '');\n  str = str.replace(/([A-Z])/g, function($1) {\n    return '-' + $1.toLowerCase();\n  });\n\n  return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n};\n\n/**\n * convert a hyphenated string to camelCase\n * @param  {String} str\n * @return {String}\n */\nfbUtils.camelCase = (str) => {\n  return str.replace(/-([a-z])/g, function(m, w) {\n    return w.toUpperCase();\n  });\n};\n\n/**\n * Generate markup wrapper where needed\n *\n * @param  {string}              tag\n * @param  {String|Array|Object} content we wrap this\n * @param  {Object}              attrs\n * @return {String}\n */\nfbUtils.markup = function(tag, content = '', attrs = {}) {\n  let contentType,\n    field = document.createElement(tag),\n    getContentType = function(content) {\n      return Array.isArray(content) ? 'array' : typeof content;\n    },\n    appendContent = {\n      string: function(content) {\n        field.innerHTML = content;\n      },\n      object: function(content) {\n        return field.appendChild(content);\n      },\n      array: function(content) {\n        for (var i = 0; i < content.length; i++) {\n          contentType = getContentType(content[i]);\n          appendContent[contentType](content[i]);\n        }\n      }\n    };\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      let name = fbUtils.safeAttrName(attr);\n      field.setAttribute(name, attrs[attr]);\n    }\n  }\n\n  contentType = getContentType(content);\n\n  if (content) {\n    appendContent[contentType].call(this, content);\n  }\n\n  return field;\n};\n\n/**\n * Convert html element attributes to key/value object\n * @param  {Object} DOM element\n * @return {Object} ex: {attrName: attrValue}\n */\nfbUtils.parseAttrs = function(elem) {\n  var attrs = elem.attributes;\n  var data = {};\n  fbUtils.forEach(attrs, attr => {\n    let attrVal = attrs[attr].value;\n    if (attrVal.match(/false|true/g)) {\n      attrVal = (attrVal === 'true');\n    } else if (attrVal.match(/undefined/g)) {\n      attrVal = undefined;\n    }\n\n    if (attrVal) {\n      data[attrs[attr].name] = attrVal;\n    }\n\n  });\n\n  return data;\n};\n\n/**\n * Convert field options to optionData\n * @param  {Object} DOM element\n * @return {Array}      optionData array\n */\nfbUtils.parseOptions = function(field) {\n  let options = field.getElementsByTagName('option'),\n    optionData = {},\n    data = [];\n\n  if (options.length) {\n    for (var i = 0; i < options.length; i++) {\n      optionData = fbUtils.parseAttrs(options[i]);\n      optionData.label = options[i].textContent;\n      data.push(optionData);\n    }\n  }\n\n  return data;\n};\n\n/**\n * Parse XML formData\n * @param  {String} xmlString\n * @return {Array}            formData array\n */\nfbUtils.parseXML = function(xmlString) {\n  const parser = new window.DOMParser();\n  let xml = parser.parseFromString(xmlString, 'text/xml'),\n    formData = [];\n\n  if (xml) {\n    var fields = xml.getElementsByTagName('field');\n    for (var i = 0; i < fields.length; i++) {\n      let fieldData = fbUtils.parseAttrs(fields[i]);\n\n      if (fields[i].children.length) {\n        fieldData.values = fbUtils.parseOptions(fields[i]);\n      }\n\n      formData.push(fieldData);\n    }\n  }\n\n  return formData;\n};\n\n/**\n * Escape markup so it can be displayed rather than rendered\n * @param  {String} html markup\n * @return {String}      escaped html\n */\nfbUtils.escapeHtml = function(html) {\n  var escapeElement = document.createElement('textarea');\n  escapeElement.textContent = html;\n  return escapeElement.innerHTML;\n};\n\n// Escape an attribute\nfbUtils.escapeAttr = function(str) {\n  var match = {\n    '\"': '&quot;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n  };\n\n  function replaceTag(tag) {\n    return match[tag] || tag;\n  }\n\n  return (typeof str === 'string') ? str.replace(/[\"&<>]/g, replaceTag) : str;\n};\n\n// Escape attributes\nfbUtils.escapeAttrs = function(attrs) {\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      attrs[attr] = fbUtils.escapeAttr(attrs[attr]);\n    }\n  }\n\n  return attrs;\n};\n\n// forEach that can be used on nodeList\nfbUtils.forEach = function(array, callback, scope) {\n  for (var i = 0; i < array.length; i++) {\n    callback.call(scope, i, array[i]); // passes back stuff we need\n  }\n};\n\n/**\n * Remove duplicates from an array of elements\n * @param  {Array} arrArg array with possible duplicates\n * @return {Array}        array with only unique values\n */\nfbUtils.unique = function(array) {\n  return array.filter((elem, pos, arr) => {\n    return arr.indexOf(elem) === pos;\n  });\n};\n\n/**\n   * Generate preview markup\n   * @param  {object} fieldData\n   * @return {string}       preview markup for field\n   */\nfbUtils.fieldRender = function(fieldData, opts, preview = false) {\n    var fieldMarkup = '',\n      fieldLabel = '',\n      optionsMarkup = '',\n      fieldLabelText = fieldData.label || '',\n      fieldDesc = fieldData.description || '',\n      fieldRequired = '',\n      fieldOptions = fieldData.values;\n\n    fieldData.name = preview ? fieldData.name + '-preview' : fieldData.name;\n    fieldData.id = fieldData.name;\n    fieldData.name = fieldData.multiple ? fieldData.name + '[]' : fieldData.name;\n\n    fieldData.type = fieldData.subtype || fieldData.type;\n\n    if (fieldData.required) {\n      fieldData.required = null;\n      fieldData['aria-required'] = 'true';\n      fieldRequired = '<span class=\"required\">*</span>';\n    }\n\n    if (fieldData.type !== 'hidden') {\n      if (fieldDesc) {\n        fieldDesc = `<span class=\"tooltip-element\" tooltip=\"${fieldDesc}\">?</span>`;\n      }\n      fieldLabel = `<label for=\"${fieldData.id}\" class=\"fb-${fieldData.type}-label\">${fieldLabelText} ${fieldRequired} ${fieldDesc}</label>`;\n    }\n\n    var fieldLabelVal = fieldData.label;\n\n    delete fieldData.label;\n    delete fieldData.description;\n\n    var fieldDataString = fbUtils.attrString(fieldData);\n\n    switch (fieldData.type) {\n      case 'textarea':\n      case 'rich-text':\n        delete fieldData.type;\n        let fieldVal = fieldData.value || '';\n        fieldMarkup = `${fieldLabel}<textarea ${fieldDataString}>${fieldVal}</textarea>`;\n        break;\n      case 'select':\n        var optionAttrsString;\n        fieldData.type = fieldData.type.replace('-group', '');\n\n        if (fieldOptions) {\n\n          if (fieldData.placeholder) {\n            optionsMarkup += `<option disabled selected>${fieldData.placeholder}</option>`;\n          }\n\n          for (let i = 0; i < fieldOptions.length; i++) {\n            if (!fieldOptions[i].selected || fieldData.placeholder) {\n              delete fieldOptions[i].selected;\n            }\n            if (!fieldOptions[i].label) {\n              fieldOptions[i].label = '';\n            }\n            optionAttrsString = fbUtils.attrString(fieldOptions[i]);\n            optionsMarkup += `<option ${optionAttrsString}>${fieldOptions[i].label}</option>`;\n          }\n        }\n\n        fieldMarkup = `${fieldLabel}<select ${fieldDataString}>${optionsMarkup}</select>`;\n        break;\n      case 'checkbox-group':\n      case 'radio-group':\n        let optionAttrs;\n        fieldData.type = fieldData.type.replace('-group', '');\n\n        if (fieldData.type === 'checkbox') {\n          fieldData.name = fieldData.name + '[]';\n        }\n\n        if (fieldOptions) {\n          let optionAttrsString;\n\n          for (let i = 0; i < fieldOptions.length; i++) {\n            optionAttrs = Object.assign({value: '', label: ''}, fieldData, fieldOptions[i]);\n\n            if (optionAttrs.selected) {\n              delete optionAttrs.selected;\n              optionAttrs.checked = null;\n            }\n\n            optionAttrs.id = fieldData.id + '-' + i;\n            optionAttrsString = fbUtils.attrString(optionAttrs);\n            optionsMarkup += `<input ${optionAttrsString} /> <label for=\"${optionAttrs.id}\">${optionAttrs.label}</label><br>`;\n          }\n\n          if (fieldData.other) {\n            let otherOptionAttrs = {\n              id: fieldData.id + '-' + 'other',\n              className: fieldData.className + ' other-option',\n              onclick: `fbUtils.otherOptionCB('${fieldData.id}-other')`\n            };\n\n            optionAttrsString = fbUtils.attrString(Object.assign({}, fieldData, otherOptionAttrs));\n\n            optionsMarkup += `<input ${optionAttrsString} /> <label for=\"${otherOptionAttrs.id}\">${opts.messages.other}</label> <input type=\"text\" name=\"${fieldData.name}\" id=\"${otherOptionAttrs.id}-value\" style=\"display:none;\" />`;\n          }\n\n        }\n        fieldMarkup = `${fieldLabel}<div class=\"${fieldData.type}-group\">${optionsMarkup}</div>`;\n        break;\n      case 'text':\n      case 'password':\n      case 'email':\n      case 'number':\n      case 'file':\n      case 'hidden':\n      case 'date':\n      case 'tel':\n      case 'autocomplete':\n        fieldMarkup = `${fieldLabel} <input ${fieldDataString}>`;\n        break;\n      case 'color':\n        fieldMarkup = `${fieldLabel} <input ${fieldDataString}> ${opts.messages.selectColor}`;\n        break;\n      case 'button':\n      case 'submit':\n        fieldMarkup = `<button ${fieldDataString}>${fieldLabelVal}</button>`;\n        break;\n      case 'checkbox':\n        fieldMarkup = `<input ${fieldDataString}> ${fieldLabel}`;\n\n        if (fieldData.toggle) {\n          setTimeout(function() {\n            $(document.getElementById(fieldData.id)).kcToggle();\n          }, 100);\n        }\n        break;\n      default:\n        fieldMarkup = `<${fieldData.type} ${fieldDataString}>${fieldLabelVal}</${fieldData.type}>`;\n    }\n\n    if (fieldData.type !== 'hidden') {\n      let className = fieldData.id ? `fb-${fieldData.type} form-group field-${fieldData.id}` : '';\n      fieldMarkup = fbUtils.markup('div', fieldMarkup, {\n        className: className\n      });\n    } else {\n      fieldMarkup = fbUtils.markup('input', null, fieldData);\n    }\n\n    return fieldMarkup;\n  };\n\n/**\n * Callback for other option.\n * Toggles the hidden text area for \"other\" option.\n * @param  {String} otherId id of the \"other\" option input\n */\nfbUtils.otherOptionCB = (otherId) => {\n  let otherInput = document.getElementById(otherId),\n  otherInputValue = document.getElementById(`${otherId}-value`);\n\n  if (otherInput.checked) {\n    otherInput.style.display = 'none';\n    otherInputValue.style.display = 'inline-block';\n  } else {\n    otherInput.style.display = 'inline-block';\n    otherInputValue.style.display = 'none';\n  }\n};\n\n/**\n * Capitalizes a string\n * @param  {String} str uncapitalized string\n * @return {String} str capitalized string\n */\nfbUtils.capitalize = (str) => {\n  return str.replace(/\\b\\w/g, function(m) {\n      return m.toUpperCase();\n    });\n};\n","(function($) {\n  'use strict';\n\n  var Toggle = function(element, options) {\n\n    var defaults = {\n      theme: 'fresh',\n      messages: {\n        off: 'Off',\n        on: 'On'\n      }\n    };\n\n    var opts = $.extend(defaults, options),\n      $kcToggle = $('<div class=\"kc-toggle\"/>').insertAfter(element).append(element);\n\n    $kcToggle.toggleClass('on', element.is(':checked'));\n\n    var kctOn = `<div class=\"kct-on\">${opts.messages.on}</div>`,\n        kctOff = `<div class=\"kct-off\">${opts.messages.off}</div>`,\n        kctHandle = `<div class=\"kct-handle\"></div>`,\n        kctInner = `<div class=\"kct-inner\">${kctOn}${kctHandle}${kctOff}</div>`;\n\n    $kcToggle.append(kctInner);\n\n    $kcToggle.click(function() {\n      element.attr('checked', !element.attr('checked'));\n      $(this).toggleClass('on');\n    });\n\n  };\n\n  $.fn.kcToggle = function(options) {\n    var toggle = this;\n    return toggle.each(function() {\n      var element = $(this);\n      if (element.data('kcToggle')) {\n        return;\n      }\n      var kcToggle = new Toggle(element, options);\n      element.data('kcToggle', kcToggle);\n    });\n  };\n\n})(jQuery);\n","'use strict';\r\n\r\n(function($) {\r\n  var FormBuilder = function(options, element) {\r\n    var formBuilder = this;\r\n\r\n    var defaults = {\r\n      controlPosition: 'right',\r\n      controlOrder: [\r\n        'autocomplete',\r\n        'button',\r\n        'checkbox',\r\n        'checkbox-group',\r\n        'date',\r\n        'file',\r\n        'header',\r\n        'hidden',\r\n        'paragraph',\r\n        'number',\r\n        'radio-group',\r\n        'select',\r\n        'text',\r\n        'textarea'\r\n      ],\r\n      dataType: 'xml',\r\n      // Array of fields to disable\r\n      disableFields: [],\r\n      editOnAdd: false,\r\n      // Uneditable fields or other content you would like to appear before and after regular fields:\r\n      append: false,\r\n      prepend: false,\r\n      // array of objects with fields values\r\n      // ex:\r\n      // defaultFields: [{\r\n      //   label: 'First Name',\r\n      //   name: 'first-name',\r\n      //   required: 'true',\r\n      //   description: 'Your first name',\r\n      //   type: 'text'\r\n      // }, {\r\n      //   label: 'Phone',\r\n      //   name: 'phone',\r\n      //   description: 'How can we reach you?',\r\n      //   type: 'text'\r\n      // }],\r\n      defaultFields: [],\r\n      inputSets: [],\r\n      fieldRemoveWarn: false,\r\n      roles: {\r\n        1: 'Administrator'\r\n      },\r\n      messages: {\r\n        addOption: 'Add Option +',\r\n        allFieldsRemoved: 'All fields were removed.',\r\n        allowSelect: 'Allow Select',\r\n        allowMultipleFiles: 'Allow users to upload multiple files',\r\n        autocomplete: 'Autocomplete',\r\n        button: 'Button',\r\n        cannotBeEmpty: 'This field cannot be empty',\r\n        checkboxGroup: 'Checkbox Group',\r\n        checkbox: 'Checkbox',\r\n        checkboxes: 'Checkboxes',\r\n        className: 'Class',\r\n        clearAllMessage: 'Are you sure you want to clear all fields?',\r\n        clearAll: 'Clear',\r\n        close: 'Close',\r\n        content: 'Content',\r\n        copy: 'Copy To Clipboard',\r\n        copyButton: '&#43;',\r\n        copyButtonTooltip: 'Copy',\r\n        dateField: 'Date Field',\r\n        description: 'Help Text',\r\n        descriptionField: 'Description',\r\n        devMode: 'Developer Mode',\r\n        editNames: 'Edit Names',\r\n        editorTitle: 'Form Elements',\r\n        editXML: 'Edit XML',\r\n        enableOther: 'Enable &quot;Other&quot;',\r\n        enableOtherMsg: 'Let users to enter an unlisted option',\r\n        fieldDeleteWarning: false,\r\n        fieldVars: 'Field Variables',\r\n        fieldNonEditable: 'This field cannot be edited.',\r\n        fieldRemoveWarning: 'Are you sure you want to remove this field?',\r\n        fileUpload: 'File Upload',\r\n        formUpdated: 'Form Updated',\r\n        getStarted: 'Drag a field from the right to this area',\r\n        header: 'Header',\r\n        hide: 'Edit',\r\n        hidden: 'Hidden Input',\r\n        label: 'Label',\r\n        labelEmpty: 'Field Label cannot be empty',\r\n        limitRole: 'Limit access to one or more of the following roles:',\r\n        mandatory: 'Mandatory',\r\n        maxlength: 'Max Length',\r\n        minOptionMessage: 'This field requires a minimum of 2 options',\r\n        multipleFiles: 'Multiple Files',\r\n        name: 'Name',\r\n        no: 'No',\r\n        number: 'Number',\r\n        off: 'Off',\r\n        on: 'On',\r\n        option: 'Option',\r\n        optional: 'optional',\r\n        optionLabelPlaceholder: 'Label',\r\n        optionValuePlaceholder: 'Value',\r\n        optionEmpty: 'Option value required',\r\n        other: 'Other',\r\n        paragraph: 'Paragraph',\r\n        placeholder: 'Placeholder',\r\n        placeholders: {\r\n          value: 'Value',\r\n          label: 'Label',\r\n          text: '',\r\n          textarea: '',\r\n          email: 'Enter you email',\r\n          placeholder: '',\r\n          className: 'space separated classes',\r\n          password: 'Enter your password'\r\n        },\r\n        preview: 'Preview',\r\n        radioGroup: 'Radio Group',\r\n        radio: 'Radio',\r\n        removeMessage: 'Remove Element',\r\n        removeOption: 'Remove Option',\r\n        remove: '&#215;',\r\n        required: 'Required',\r\n        richText: 'Rich Text Editor',\r\n        roles: 'Access',\r\n        save: 'Save',\r\n        selectOptions: 'Options',\r\n        select: 'Select',\r\n        selectColor: 'Select Color',\r\n        selectionsMessage: 'Allow Multiple Selections',\r\n        size: 'Size',\r\n        sizes: {\r\n          xs: 'Extra Small',\r\n          sm: 'Small',\r\n          m: 'Default',\r\n          lg: 'Large'\r\n        },\r\n        style: 'Style',\r\n        styles: {\r\n          btn: {\r\n            'default': 'Default',\r\n            danger: 'Danger',\r\n            info: 'Info',\r\n            primary: 'Primary',\r\n            success: 'Success',\r\n            warning: 'Warning'\r\n          }\r\n        },\r\n        subtype: 'Type',\r\n        text: 'Text Field',\r\n        textArea: 'Text Area',\r\n        toggle: 'Toggle',\r\n        warning: 'Warning!',\r\n        value: 'Value',\r\n        viewJSON: '{  }',\r\n        viewXML: '&lt;/&gt;',\r\n        yes: 'Yes'\r\n      },\r\n      notify: {\r\n        error: function(message) {\r\n          return console.error(message);\r\n        },\r\n        success: function(message) {\r\n          return console.log(message);\r\n        },\r\n        warning: function(message) {\r\n          return console.warn(message);\r\n        }\r\n      },\r\n      sortableControls: false,\r\n      stickyControls: false,\r\n      showActionButtons: true,\r\n      typeUserAttrs: {},\r\n      typeUserEvents: {},\r\n      prefix: 'form-builder-'\r\n    };\r\n\r\n    var utils = fbUtils;\r\n\r\n    defaults.messages.subtypes = (() => {\r\n      const subtypeDefault = (subtype) => {\r\n        return {\r\n          label: subtype,\r\n          value: subtype\r\n        };\r\n      };\r\n\r\n      return {\r\n          text: ['text', 'password', 'email', 'color', 'tel'].map(subtypeDefault),\r\n          header: ['h1', 'h2', 'h3'].map(subtypeDefault),\r\n          button: ['button', 'submit', 'reset'].map(subtypeDefault),\r\n          paragraph: ['p','address','blockquote','canvas','output'].map(subtypeDefault)\r\n        };\r\n    })();\r\n\r\n    var opts = Object.assign({}, defaults, options),\r\n      frmbID = 'frmb-' + $('ul[id^=frmb-]').length++;\r\n\r\n    if (options.messages) {\r\n      opts.messages = Object.assign({}, defaults.messages, options.messages);\r\n    }\r\n\r\n    opts.formID = frmbID;\r\n\r\n    formBuilder.element = element;\r\n\r\n    var $sortableFields = $('<ul/>').attr('id', frmbID).addClass('frmb');\r\n    var _helpers = formBuilderHelpersFn(opts, formBuilder);\r\n\r\n    formBuilder.layout = _helpers.editorLayout(opts.controlPosition);\r\n\r\n    var lastID = frmbID + '-fld-1',\r\n      boxID = frmbID + '-control-box';\r\n\r\n    // create array of field objects to cycle through\r\n    var frmbFields = [{\r\n      label: opts.messages.autocomplete,\r\n      attrs: {\r\n        type: 'autocomplete',\r\n        className: 'autocomplete',\r\n        name: 'autocomplete'\r\n      }\r\n    }, {\r\n      label: opts.messages.button,\r\n      attrs: {\r\n        type: 'button',\r\n        className: 'button-input',\r\n        name: 'button'\r\n      }\r\n    }, {\r\n      label: opts.messages.checkbox,\r\n      attrs: {\r\n        type: 'checkbox',\r\n        className: 'checkbox',\r\n        name: 'checkbox'\r\n      }\r\n    }, {\r\n      label: opts.messages.checkboxGroup,\r\n      attrs: {\r\n        type: 'checkbox-group',\r\n        className: 'checkbox-group',\r\n        name: 'checkbox-group'\r\n      }\r\n    }, {\r\n      label: opts.messages.dateField,\r\n      attrs: {\r\n        type: 'date',\r\n        className: 'calendar',\r\n        name: 'date-input'\r\n      }\r\n    }, {\r\n      label: opts.messages.fileUpload,\r\n      attrs: {\r\n        type: 'file',\r\n        className: 'file-input',\r\n        name: 'file-input'\r\n      }\r\n    }, {\r\n      label: opts.messages.header,\r\n      attrs: {\r\n        type: 'header',\r\n        className: 'header'\r\n      }\r\n    }, {\r\n      label: opts.messages.hidden,\r\n      attrs: {\r\n        type: 'hidden',\r\n        className: 'hidden-input',\r\n        name: 'hidden-input'\r\n      }\r\n    }, {\r\n      label: opts.messages.number,\r\n      attrs: {\r\n        type: 'number',\r\n        className: 'number',\r\n        name: 'number'\r\n      }\r\n    }, {\r\n      label: opts.messages.paragraph,\r\n      attrs: {\r\n        type: 'paragraph',\r\n        className: 'paragraph'\r\n      }\r\n    }, {\r\n      label: opts.messages.radioGroup,\r\n      attrs: {\r\n        type: 'radio-group',\r\n        className: 'radio-group',\r\n        name: 'radio-group'\r\n      }\r\n    }, {\r\n      label: opts.messages.select,\r\n      attrs: {\r\n        type: 'select',\r\n        className: 'select',\r\n        name: 'select'\r\n      }\r\n    }, {\r\n      label: opts.messages.text,\r\n      attrs: {\r\n        type: 'text',\r\n        className: 'text-input',\r\n        name: 'text-input'\r\n      }\r\n    }, {\r\n      label: opts.messages.textArea,\r\n      attrs: {\r\n        type: 'textarea',\r\n        className: 'text-area',\r\n        name: 'textarea'\r\n      }\r\n    }];\r\n\r\n    frmbFields = _helpers.orderFields(frmbFields);\r\n\r\n    if (opts.disableFields) {\r\n      // remove disabledFields\r\n      frmbFields = frmbFields.filter(function(field) {\r\n        return !utils.inArray(field.attrs.type, opts.disableFields);\r\n      });\r\n    }\r\n\r\n    // Create draggable fields for formBuilder\r\n    var cbUl = utils.markup('ul', null, {id: boxID, className: 'frmb-control'});\r\n\r\n    if (opts.sortableControls) {\r\n      cbUl.classList.add('sort-enabled');\r\n    }\r\n\r\n    var $cbUL = $(cbUl);\r\n\r\n    // Loop through\r\n    utils.forEach(frmbFields, (i) => {\r\n      let $field = $('<li/>', {\r\n        'class': 'icon-' + frmbFields[i].attrs.className,\r\n        'type': frmbFields[i].type,\r\n        'name': frmbFields[i].className,\r\n        'label': frmbFields[i].label\r\n      });\r\n\r\n      $field.data('newFieldData', frmbFields[i]);\r\n\r\n      let typeLabel = utils.markup('span', frmbFields[i].label);\r\n      $field.html(typeLabel).appendTo($cbUL);\r\n    });\r\n\r\n    if (opts.inputSets.length) {\r\n      $('<li/>', {'class': 'fb-separator'}).html('<hr>').appendTo($cbUL);\r\n      opts.inputSets.forEach((set) => {\r\n        set.name = set.name || _helpers.makeClassName(set.label);\r\n        let $set =  $('<li/>', {'class': 'input-set-control', type: set.name});\r\n        $set.html(set.label).appendTo($cbUL);\r\n      });\r\n    }\r\n\r\n    // Sortable fields\r\n    $sortableFields.sortable({\r\n      cursor: 'move',\r\n      opacity: 0.9,\r\n      revert: 150,\r\n      beforeStop: _helpers.beforeStop,\r\n      start: _helpers.startMoving,\r\n      stop: _helpers.stopMoving,\r\n      cancel: 'input, select, .disabled, .form-group, .btn',\r\n      placeholder: 'frmb-placeholder'\r\n    });\r\n\r\n    // ControlBox with different fields\r\n    $cbUL.sortable({\r\n      helper: 'clone',\r\n      opacity: 0.9,\r\n      connectWith: $sortableFields,\r\n      cancel: '.fb-separator',\r\n      cursor: 'move',\r\n      scroll: false,\r\n      placeholder: 'ui-state-highlight',\r\n      start: _helpers.startMoving,\r\n      stop: _helpers.stopMoving,\r\n      revert: 150,\r\n      beforeStop: _helpers.beforeStop,\r\n      distance: 3,\r\n      update: function(event, ui) {\r\n        if (_helpers.doCancel) {\r\n          return false;\r\n        }\r\n        if (ui.item.parent()[0] === $sortableFields[0]) {\r\n          processControl(ui.item);\r\n          _helpers.doCancel = true;\r\n        } else {\r\n          _helpers.setFieldOrder($cbUL);\r\n          _helpers.doCancel = !opts.sortableControls;\r\n        }\r\n      }\r\n    });\r\n\r\n    var processControl = (control) => {\r\n      if (control[0].classList.contains('input-set-control')) {\r\n        let inputSet = opts.inputSets.filter((set) => {\r\n          return set.name === control[0].type;\r\n        })[0];\r\n        if (inputSet.showHeader) {\r\n          let header = {\r\n              type: 'header',\r\n              subtype: 'h2',\r\n              id: inputSet.name,\r\n              label: inputSet.label\r\n            };\r\n          prepFieldVars(header, true);\r\n        }\r\n        inputSet.fields.forEach((field) => {\r\n          prepFieldVars(field, true);\r\n        });\r\n      } else {\r\n        prepFieldVars(control, true);\r\n      }\r\n    };\r\n\r\n    var $formWrap = $('<div/>', {\r\n      id: frmbID + '-form-wrap',\r\n      'class': 'form-wrap form-builder' + _helpers.mobileClass()\r\n    });\r\n\r\n    var $stageWrap = $('<div/>', {\r\n      id: frmbID + '-stage-wrap',\r\n      'class': 'stage-wrap ' + formBuilder.layout.stage\r\n    });\r\n\r\n    var cbWrap = $('<div/>', {\r\n      id: frmbID + '-cb-wrap',\r\n      'class': 'cb-wrap ' + formBuilder.layout.controls\r\n    }).append($cbUL[0]);\r\n\r\n    if (opts.showActionButtons) {\r\n      // Build our headers and action links\r\n      let viewDataText = opts.dataType === 'xml' ? opts.messages.viewXML : opts.messages.viewJSON,\r\n        viewData = utils.markup('button', viewDataText, {\r\n          id: frmbID + '-view-data',\r\n          type: 'button',\r\n          className: 'view-data btn btn-default'\r\n        }),\r\n        clearAll = utils.markup('button', opts.messages.clearAll, {\r\n          id: frmbID + '-clear-all',\r\n          type: 'button',\r\n          className: 'clear-all btn btn-default'\r\n        }),\r\n        saveAll = utils.markup('button', opts.messages.save, {\r\n          className: `btn btn-primary ${opts.prefix}save`,\r\n          id: frmbID + '-save',\r\n          type: 'button'\r\n        }),\r\n        formActions = utils.markup('div', [clearAll, viewData, saveAll], {\r\n          className: 'form-actions btn-group'\r\n        });\r\n\r\n      cbWrap.append(formActions);\r\n    }\r\n\r\n    $stageWrap.append($sortableFields, cbWrap);\r\n    $stageWrap.before($formWrap);\r\n    $formWrap.append($stageWrap, cbWrap);\r\n    $(element).append($formWrap);\r\n\r\n    var saveAndUpdate = _helpers.debounce(function(evt) {\r\n      if (evt) {\r\n        if (evt.type === 'keyup' && this.name === 'className') {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      let $field = $(this).parents('.form-field:eq(0)');\r\n      _helpers.updatePreview($field);\r\n      _helpers.save();\r\n    });\r\n\r\n    // Save field on change\r\n    $sortableFields.on('change blur keyup', '.form-elements input, .form-elements select, .form-elements textarea', saveAndUpdate);\r\n\r\n    $('li', $cbUL).click(function() {\r\n      _helpers.stopIndex = undefined;\r\n      processControl($(this));\r\n      _helpers.save();\r\n    });\r\n\r\n    // Add append and prepend options if necessary\r\n    var nonEditableFields = function() {\r\n      let cancelArray = [];\r\n\r\n      if (opts.prepend && !$('.disabled.prepend', $sortableFields).length) {\r\n        let prependedField = utils.markup('li', opts.prepend, {className: 'disabled prepend'});\r\n        cancelArray.push(true);\r\n        $sortableFields.prepend(prependedField);\r\n      }\r\n\r\n      if (opts.append && !$('.disabled.append', $sortableFields).length) {\r\n        let appendedField = utils.markup('li', opts.append, {className: 'disabled append'});\r\n        cancelArray.push(true);\r\n        $sortableFields.append(appendedField);\r\n      }\r\n\r\n      if (cancelArray.some(elem => elem === true)) {\r\n        $stageWrap.removeClass('empty');\r\n      }\r\n    };\r\n\r\n    var prepFieldVars = function($field, isNew = false) {\r\n      var field = {};\r\n      if ($field instanceof jQuery) {\r\n        let fieldData = $field.data('newFieldData');\r\n        if (fieldData) {\r\n          field = fieldData.attrs;\r\n          field.label = fieldData.label;\r\n        } else {\r\n          let attrs = $field[0].attributes;\r\n          if (!isNew) {\r\n            field.values = $field.children().map((index, elem) => {\r\n              return {\r\n                label: $(elem).text(),\r\n                value: $(elem).attr('value'),\r\n                selected: Boolean($(elem).attr('selected'))\r\n              };\r\n            });\r\n          }\r\n\r\n          for (var i = attrs.length - 1; i >= 0; i--) {\r\n            field[attrs[i].name] = attrs[i].value;\r\n          }\r\n        }\r\n      } else {\r\n        field = Object.assign({}, $field);\r\n      }\r\n\r\n      field.name = isNew ? nameAttr(field) : ( field.name || nameAttr(field) );\r\n\r\n      if (isNew && utils.inArray(field.type, ['text', 'number', 'file', 'select', 'textarea'])) {\r\n        field.className = 'form-control'; // backwards compatibility\r\n      } else {\r\n        field.className = field.class || field.className; // backwards compatibility\r\n      }\r\n\r\n      var match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(field.className);\r\n      if (match) {\r\n        field.style = match[1];\r\n      }\r\n\r\n      utils.escapeAttrs(field);\r\n\r\n      appendNewField(field);\r\n      if (isNew) {\r\n        document.dispatchEvent(formBuilder.events.fieldAdded);\r\n      }\r\n      $stageWrap.removeClass('empty');\r\n    };\r\n\r\n    // Parse saved XML template data\r\n    var loadFields = function() {\r\n      let formData = formBuilder.formData;\r\n      if (formData && formData.length) {\r\n        for (let i = 0; i < formData.length; i++) {\r\n          prepFieldVars(formData[i]);\r\n        }\r\n        $stageWrap.removeClass('empty');\r\n      } else if (opts.defaultFields && opts.defaultFields.length) {\r\n        // Load default fields if none are set\r\n        opts.defaultFields.forEach(field => prepFieldVars(field));\r\n        $stageWrap.removeClass('empty');\r\n      } else if (!opts.prepend && !opts.append) {\r\n        $stageWrap.addClass('empty').attr('data-content', opts.messages.getStarted);\r\n      }\r\n      _helpers.save();\r\n\r\n      $('li.form-field:not(.disabled)', $sortableFields).each(function() {\r\n        _helpers.updatePreview($(this));\r\n      });\r\n\r\n      nonEditableFields();\r\n    };\r\n\r\n    // callback to track disabled tooltips\r\n    $sortableFields.on('mousemove', 'li.disabled', function(e) {\r\n      $('.frmb-tt', this).css({\r\n        left: e.offsetX - 16,\r\n        top: e.offsetY - 34\r\n      });\r\n    });\r\n\r\n    // callback to call disabled tooltips\r\n    $sortableFields.on('mouseenter', 'li.disabled', function() {\r\n      _helpers.disabledTT.add($(this));\r\n    });\r\n\r\n    // callback to call disabled tooltips\r\n    $sortableFields.on('mouseleave', 'li.disabled', function() {\r\n      _helpers.disabledTT.remove($(this));\r\n    });\r\n\r\n    var nameAttr = function(field) {\r\n      var epoch = new Date().getTime();\r\n      return field.type + '-' + epoch;\r\n    };\r\n\r\n    /**\r\n     * Add data for field with options [select, checkbox-group, radio-group]\r\n     *\r\n     * @todo   refactor this nasty ~crap~ code, its actually painful to look at\r\n     * @param  {object} values\r\n     */\r\n    var fieldOptions = function(values) {\r\n      let optionActions = [\r\n          utils.markup('a', opts.messages.addOption, {className: 'add add-opt'})\r\n        ],\r\n        fieldOptions = [`<label class=\"false-label\">${opts.messages.selectOptions}</label>`],\r\n        isMultiple = values.multiple || (values.type === 'checkbox-group');\r\n\r\n      if (!values.values || !values.values.length) {\r\n        values.values = [1, 2, 3].map(function(index) {\r\n          let label = `${opts.messages.option} ${index}`;\r\n          let option = {\r\n            selected: false,\r\n            label: label,\r\n            value: utils.hyphenCase(label)\r\n          };\r\n          return option;\r\n        });\r\n        values.values[0].selected = true;\r\n      } else {\r\n        // ensure option data is has all required keys\r\n        values.values.forEach(option => Object.assign({}, {selected: false}, option));\r\n      }\r\n\r\n      fieldOptions.push('<div class=\"sortable-options-wrap\">');\r\n\r\n      fieldOptions.push('<ol class=\"sortable-options\">');\r\n      utils.forEach(values.values, (i) => {\r\n        fieldOptions.push(selectFieldOptions(values.name, values.values[i], isMultiple));\r\n      });\r\n      fieldOptions.push('</ol>');\r\n      fieldOptions.push(utils.markup('div', optionActions, {className: 'option-actions'}).outerHTML);\r\n      fieldOptions.push('</div>');\r\n\r\n      return utils.markup('div', fieldOptions.join(''), {className: 'form-group field-options'}).outerHTML;\r\n    };\r\n\r\n    /**\r\n     * Build the editable properties for the field\r\n     * @param  {object} values configuration object for advanced fields\r\n     * @return {String}        markup for advanced fields\r\n     */\r\n    var advFields = function(values) {\r\n      var advFields = [],\r\n        key,\r\n        optionFields = [\r\n          'select',\r\n          'checkbox-group',\r\n          'radio-group'\r\n        ],\r\n        isOptionField = (function() {\r\n          return (optionFields.indexOf(values.type) !== -1);\r\n        })(),\r\n        valueField = !utils.inArray(values.type, ['header', 'paragraph', 'file'].concat(optionFields)),\r\n        roles = values.role !== undefined ? values.role.split(',') : [];\r\n\r\n      advFields.push(requiredField(values));\r\n\r\n      if (values.type === 'checkbox') {\r\n        advFields.push(boolAttribute('toggle', values, {first: opts.messages.toggle}));\r\n      }\r\n\r\n      advFields.push(textAttribute('label', values));\r\n\r\n      values.size = values.size || 'm';\r\n      values.style = values.style || 'default';\r\n\r\n      //Help Text / Description Field\r\n      if (!utils.inArray(values.type, ['header', 'paragraph', 'button'])) {\r\n        advFields.push(textAttribute('description', values));\r\n      }\r\n\r\n      if (opts.messages.subtypes[values.type]) {\r\n        let optionData = opts.messages.subtypes[values.type];\r\n        advFields.push(selectAttribute('subtype', values, optionData));\r\n      }\r\n\r\n      if (values.type === 'button') {\r\n        advFields.push(btnStyles(values.style, values.type));\r\n      }\r\n\r\n      if (values.type === 'number') {\r\n        advFields.push(numberAttribute('min', values));\r\n        advFields.push(numberAttribute('max', values));\r\n        advFields.push(numberAttribute('step', values));\r\n      }\r\n\r\n      // Placeholder\r\n      advFields.push(textAttribute('placeholder', values));\r\n\r\n      //TextArea Rows Attribute\r\n      if (values.type === 'textarea') {\r\n        advFields.push(numberAttribute('rows', values));\r\n      }\r\n\r\n      // Class\r\n      advFields.push(textAttribute('className', values));\r\n\r\n      advFields.push(textAttribute('name', values));\r\n\r\n      if (valueField) {\r\n        advFields.push(textAttribute('value', values));\r\n      }\r\n\r\n      if (values.type === 'file') {\r\n        let labels = {\r\n          first: opts.messages.multipleFiles,\r\n          second: opts.messages.allowMultipleFiles\r\n        };\r\n        advFields.push(boolAttribute('multiple', values, labels));\r\n      }\r\n\r\n      let rolesDisplay = values.role !== undefined ? 'style=\"display:block\"' : '';\r\n      let availableRoles = [\r\n        `<div class=\"available-roles\" ${rolesDisplay}>`\r\n      ];\r\n      for (key in opts.roles) {\r\n        if (opts.roles.hasOwnProperty(key)) {\r\n          let checked = utils.inArray(key, roles) ? 'checked' : '',\r\n          roleId = `fld-${lastID}-roles-${key}`;\r\n          availableRoles.push(`<input type=\"checkbox\" name=\"roles[]\" value=\"${key}\" id=\"${roleId}\" ${checked} class=\"roles-field\" /> <label for=\"${roleId}\">${opts.roles[key]}</label><br/>`);\r\n        }\r\n      }\r\n\r\n      availableRoles.push('</div>');\r\n\r\n      let accessLabels = {first: opts.messages.roles, second: opts.messages.limitRole, content: availableRoles.join('')};\r\n\r\n      advFields.push(boolAttribute('access', values, accessLabels));\r\n\r\n      if (values.type === 'checkbox-group' || values.type === 'radio-group') {\r\n        advFields.push(boolAttribute('other', values, {first: opts.messages.enableOther, second: opts.messages.enableOtherMsg}));\r\n      }\r\n\r\n      if (values.type === 'select') {\r\n        advFields.push(boolAttribute('multiple', values, {first: ' ', second: opts.messages.selectionsMessage}));\r\n      }\r\n\r\n      if (isOptionField) {\r\n        advFields.push(fieldOptions(values));\r\n      }\r\n\r\n      if (utils.inArray(values.type, ['text', 'textarea'])) {\r\n        advFields.push(numberAttribute('maxlength', values));\r\n      }\r\n\r\n      // Append custom attributes as defined in typeUserAttrs option\r\n      if (opts.typeUserAttrs[values.type]) {\r\n        advFields.push(processTypeUserAttrs(opts.typeUserAttrs[values.type], values));\r\n      }\r\n\r\n      return advFields.join('');\r\n    };\r\n\r\n    function processTypeUserAttrs(typeUserAttr, values) {\r\n      let advField = [];\r\n\r\n      for (let attribute in typeUserAttr) {\r\n        if (typeUserAttr.hasOwnProperty(attribute)) {\r\n          let orig = opts.messages[attribute];\r\n          let origValue = typeUserAttr[attribute].value;\r\n          typeUserAttr[attribute].value = values[attribute] || typeUserAttr[attribute].value || '';\r\n\r\n          if (typeUserAttr[attribute].label) {\r\n            opts.messages[attribute] = typeUserAttr[attribute].label;\r\n          }\r\n\r\n          if (typeUserAttr[attribute].options) {\r\n            advField.push(selectUserAttrs(attribute, typeUserAttr[attribute]));\r\n          } else {\r\n            advField.push(inputUserAttrs(attribute, typeUserAttr[attribute]));\r\n          }\r\n\r\n          opts.messages[attribute] = orig;\r\n          typeUserAttr[attribute].value = origValue;\r\n        }\r\n      }\r\n\r\n      return advField.join('');\r\n    }\r\n\r\n    function inputUserAttrs(name, attrs) {\r\n      let textAttrs = {\r\n          id: name + '-' + lastID,\r\n          title: attrs.description || attrs.label || name.toUpperCase(),\r\n          name: name,\r\n          type: attrs.type || 'text',\r\n          className: [`fld-${name}`]\r\n        },\r\n        label = `<label for=\"${textAttrs.id}\">${opts.messages[name]}</label>`;\r\n\r\n      if (!utils.inArray(textAttrs.type, ['checkbox', 'checkbox-group', 'radio-group'])) {\r\n        textAttrs.className.push('form-control');\r\n      }\r\n\r\n      textAttrs = Object.assign({}, attrs, textAttrs);\r\n      let textInput = `<input ${utils.attrString(textAttrs)}>`,\r\n      inputWrap = `<div class=\"input-wrap\">${textInput}</div>`;\r\n      return `<div class=\"form-group ${name}-wrap\">${label}${inputWrap}</div>`;\r\n    }\r\n\r\n    function selectUserAttrs(name, options) {\r\n      let optis = Object.keys(options.options).map(val => {\r\n        let attrs = {value: val};\r\n        if (val === options.value) { attrs.selected = null; }\r\n        return `<option ${utils.attrString(attrs)}>${options.options[val]}</option>`;\r\n      }),\r\n        selectAttrs = {\r\n          id: name + '-' + lastID,\r\n          title: options.description || options.label || name.toUpperCase(),\r\n          name: name,\r\n          className: `fld-${name} form-control`\r\n        },\r\n        label = `<label for=\"${selectAttrs.id}\">${opts.messages[name]}</label>`;\r\n\r\n      Object.keys(options).filter(prop => {\r\n        return !utils.inArray(prop, ['value', 'options', 'label']);\r\n      }).forEach(function(attr) {\r\n        selectAttrs[attr] = options[attr];\r\n      });\r\n\r\n      let select = `<select ${utils.attrString(selectAttrs)}>${optis.join('')}</select>`,\r\n        inputWrap = `<div class=\"input-wrap\">${select}</div>`;\r\n      return `<div class=\"form-group ${name}-wrap\">${label}${inputWrap}</div>`;\r\n    }\r\n\r\n    var boolAttribute = function(name, values, labels) {\r\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][name]) {\r\n        return;\r\n      }\r\n\r\n      let label = (txt) => {\r\n        return `<label for=\"${name}-${lastID}\">${txt}</label>`;\r\n      },\r\n      checked = (values[name] !== undefined ? 'checked' : ''),\r\n      input = `<input type=\"checkbox\" class=\"fld-${name}\" name=\"${name}\" value=\"true\" ${checked} id=\"${name}-${lastID}\"/> `,\r\n      left = [],\r\n      right = [\r\n        input\r\n      ];\r\n\r\n      if (labels.first) {\r\n        left.unshift(label(labels.first));\r\n      }\r\n\r\n      if (labels.second) {\r\n        right.push(label(labels.second));\r\n      }\r\n\r\n      if (labels.content) {\r\n        right.push(labels.content);\r\n      }\r\n\r\n      right.unshift('<div class=\"input-wrap\">');\r\n      right.push('</div>');\r\n\r\n      return `<div class=\"form-group ${name}-wrap\">${left.concat(right).join('')}</div>`;\r\n    };\r\n\r\n    var btnStyles = function(style, type) {\r\n      let tags = {\r\n          button: 'btn'\r\n        },\r\n        styles = opts.messages.styles[tags[type]],\r\n        styleField = '';\r\n\r\n      if (styles) {\r\n        let styleLabel = `<label>${opts.messages.style}</label>`;\r\n        styleField += `<input value=\"${style}\" name=\"style\" type=\"hidden\" class=\"btn-style\">`;\r\n        styleField += '<div class=\"btn-group\" role=\"group\">';\r\n\r\n        Object.keys(opts.messages.styles[tags[type]]).forEach(function(element) {\r\n          let active = style === element ? 'active' : '';\r\n          styleField += `<button value=\"${element}\" type=\"${type}\" class=\"${active} btn-xs ${tags[type]} ${tags[type]}-${element}\">${opts.messages.styles[tags[type]][element]}</button>`;\r\n        });\r\n\r\n        styleField += '</div>';\r\n\r\n        styleField = `<div class=\"form-group style-wrap\">${styleLabel} ${styleField}</div>`;\r\n      }\r\n\r\n      return styleField;\r\n    };\r\n\r\n    /**\r\n     * Add a number attribute to a field.\r\n     * @param  {String} attribute\r\n     * @param  {Object} values\r\n     * @return {String}\r\n     */\r\n    var numberAttribute = function(attribute, values) {\r\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][attribute]) {\r\n        return;\r\n      }\r\n\r\n      let attrVal = values[attribute],\r\n        attrLabel = opts.messages[attribute] || attribute,\r\n        placeholder = opts.messages.placeholders[attribute],\r\n        inputConfig = {\r\n          type: 'number',\r\n          value: attrVal,\r\n          name: attribute,\r\n          min: '0',\r\n          placeholder: placeholder,\r\n          className: `fld-${attribute} form-control`,\r\n          id: `${attribute}-${lastID}`\r\n        },\r\n        numberAttribute = `<input ${utils.attrString(utils.trimObj(inputConfig))}>`,\r\n        inputWrap = `<div class=\"input-wrap\">${numberAttribute}</div>`;\r\n\r\n      return `<div class=\"form-group ${attribute}-wrap\"><label for=\"${inputConfig.id}\">${attrLabel}</label> ${inputWrap}</div>`;\r\n    };\r\n\r\n    var selectAttribute = function(attribute, values, optionData) {\r\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][attribute]) {\r\n        return;\r\n      }\r\n      let selectOptions = optionData.map((option, i) => {\r\n        let optionAttrs = Object.assign({\r\n          label: `${opts.messages.option} ${i}`,\r\n          value: undefined\r\n        }, option);\r\n        if (option.value === values[attribute]) {\r\n          optionAttrs.selected = true;\r\n        }\r\n        return `<option ${utils.attrString(utils.trimObj(optionAttrs))}>${optionAttrs.label}</option>`;\r\n      }),\r\n        selectAttrs = {\r\n          id: attribute + '-' + lastID,\r\n          name: attribute,\r\n          className: `fld-${attribute} form-control`\r\n        },\r\n        label = `<label for=\"${selectAttrs.id}\">${opts.messages[attribute] || utils.capitalize(attribute)}</label>`;\r\n\r\n      let select = `<select ${utils.attrString(selectAttrs)}>${selectOptions.join('')}</select>`,\r\n        inputWrap = `<div class=\"input-wrap\">${select}</div>`;\r\n\r\n      return `<div class=\"form-group ${selectAttrs.name}-wrap\">${label}${inputWrap}</div>`;\r\n    };\r\n\r\n    /**\r\n     * Generate some text inputs for field attributes, **will be replaced**\r\n     * @param  {String} attribute\r\n     * @param  {Object} values\r\n     * @return {String}\r\n     */\r\n    var textAttribute = function(attribute, values) {\r\n      if (opts.typeUserAttrs[values.type] && opts.typeUserAttrs[values.type][attribute]) {\r\n        return;\r\n      }\r\n\r\n      var placeholderFields = [\r\n        'text',\r\n        'textarea',\r\n        'select'\r\n      ];\r\n\r\n      var noName = [\r\n        'header'\r\n      ];\r\n\r\n      var textArea = ['paragraph'];\r\n\r\n      var attrVal = values[attribute] || '',\r\n        attrLabel = opts.messages[attribute];\r\n      if (attribute === 'label' && utils.inArray(values.type, textArea)) {\r\n        attrLabel = opts.messages.content;\r\n      }\r\n\r\n      noName = noName.concat(opts.messages.subtypes.header, textArea);\r\n\r\n      let placeholders = opts.messages.placeholders,\r\n        placeholder = placeholders[attribute] || '',\r\n        attributefield = '',\r\n        noMakeAttr = [];\r\n\r\n      // Field has placeholder attribute\r\n      if (attribute === 'placeholder' && !utils.inArray(values.type, placeholderFields)) {\r\n        noMakeAttr.push(true);\r\n      }\r\n\r\n      // Field has name attribute\r\n      if (attribute === 'name' && utils.inArray(values.type, noName)) {\r\n        noMakeAttr.push(true);\r\n      }\r\n\r\n      if (!noMakeAttr.some(elem => elem === true)) {\r\n        let inputConfig = {\r\n          name: attribute,\r\n          placeholder: placeholder,\r\n          className: `fld-${attribute} form-control`,\r\n          id: `${attribute}-${lastID}`\r\n        };\r\n        let attributeLabel = `<label for=\"${inputConfig.id}\">${attrLabel}</label>`;\r\n\r\n        if (attribute === 'label' && utils.inArray(values.type, textArea) || (attribute === 'value' && values.type === 'textarea')) {\r\n          attributefield += `<textarea ${utils.attrString(inputConfig)}>${attrVal}</textarea>`;\r\n        } else {\r\n          inputConfig.value = attrVal;\r\n          inputConfig.type = 'text';\r\n          attributefield += `<input ${utils.attrString(inputConfig)}>`;\r\n        }\r\n\r\n        let inputWrap = `<div class=\"input-wrap\">${attributefield}</div>`;\r\n\r\n        attributefield = `<div class=\"form-group ${attribute}-wrap\">${attributeLabel} ${inputWrap}</div>`;\r\n      }\r\n\r\n      return attributefield;\r\n    };\r\n\r\n    var requiredField = function(values) {\r\n      var noRequire = [\r\n          'header',\r\n          'paragraph',\r\n          'button'\r\n        ],\r\n        noMake = [],\r\n        requireField = '';\r\n\r\n      if (utils.inArray(values.type, noRequire)) {\r\n        noMake.push(true);\r\n      }\r\n      if (!noMake.some(elem => elem === true)) {\r\n        requireField = boolAttribute('required', values, {first: opts.messages.required});\r\n      }\r\n\r\n      return requireField;\r\n    };\r\n\r\n    // Append the new field to the editor\r\n    var appendNewField = function(values) {\r\n      let type = values.type || 'text',\r\n        label = values.label || opts.messages[type] || opts.messages.label,\r\n        delBtn = utils.markup('a', opts.messages.remove, {\r\n          id: 'del_' + lastID,\r\n          className: 'del-button btn delete-confirm',\r\n          title: opts.messages.removeMessage\r\n        }),\r\n        toggleBtn = utils.markup('a', null, {\r\n          id: lastID + '-edit',\r\n          className: 'toggle-form btn icon-pencil',\r\n          title: opts.messages.hide\r\n        }),\r\n        copyBtn = utils.markup('a', opts.messages.copyButton, {\r\n          id: lastID + '-copy',\r\n          className: 'copy-button btn icon-copy',\r\n          title: opts.messages.copyButtonTooltip\r\n        });\r\n\r\n      var liContents = utils.markup(\r\n        'div', [toggleBtn, copyBtn, delBtn], {className: 'field-actions'}\r\n      ).outerHTML;\r\n\r\n      // Field preview Label\r\n      liContents += `<label class=\"field-label\">${label}</label>`;\r\n\r\n      if (values.description) {\r\n        liContents += `<span class=\"tooltip-element\" tooltip=\"${values.description}\">?</span>`;\r\n      }\r\n\r\n      let requiredDisplay = values.required ? 'style=\"display:inline\"' : '';\r\n      liContents += `<span class=\"required-asterisk\" ${requiredDisplay}> *</span>`;\r\n\r\n      liContents += utils.markup('div', '', {className: 'prev-holder'}).outerHTML;\r\n      liContents += '<div id=\"' + lastID + '-holder\" class=\"frm-holder\">';\r\n      liContents += '<div class=\"form-elements\">';\r\n\r\n      liContents += advFields(values);\r\n      liContents += utils.markup('a', opts.messages.close, {className: 'close-field'}).outerHTML;\r\n\r\n      liContents += '</div>';\r\n      liContents += '</div>';\r\n\r\n      let field = utils.markup('li', liContents, {\r\n          'class': type + '-field form-field',\r\n          'type': type,\r\n          id: lastID\r\n        }),\r\n        $li = $(field);\r\n\r\n      $li.data('fieldData', {attrs: values});\r\n      if (typeof _helpers.stopIndex !== 'undefined') {\r\n        $('> li', $sortableFields).eq(_helpers.stopIndex).before($li);\r\n      } else {\r\n        $sortableFields.append($li);\r\n      }\r\n\r\n      $('.sortable-options', $li).sortable({update: () => {_helpers.updatePreview($li);}}); // make dynamically added option fields sortable if they exist.\r\n\r\n      _helpers.updatePreview($li);\r\n\r\n      if (opts.editOnAdd) {\r\n        _helpers.closeAllEdit($sortableFields);\r\n        _helpers.toggleEdit(lastID);\r\n      }\r\n\r\n      if (opts.typeUserEvents[type] && opts.typeUserEvents[type].onadd) {\r\n        opts.typeUserEvents[type].onadd(field);\r\n      }\r\n\r\n      lastID = _helpers.incrementId(lastID);\r\n    };\r\n\r\n    // Select field html, since there may be multiple\r\n    var selectFieldOptions = function(name, optionData, multipleSelect) {\r\n      let optionInputType = {\r\n          selected: (multipleSelect ? 'checkbox' : 'radio')\r\n        },\r\n        optionDataOrder = [\r\n          'value',\r\n          'label',\r\n          'selected'\r\n        ],\r\n        optionInputs = [];\r\n\r\n      optionData = Object.assign({selected: false,label: '',value: ''}, optionData);\r\n\r\n      for (var i = optionDataOrder.length - 1; i >= 0; i--) {\r\n        let prop = optionDataOrder[i];\r\n        if (optionData.hasOwnProperty(prop)) {\r\n          let attrs = {\r\n            type: optionInputType[prop] || 'text',\r\n            'class': 'option-' + prop,\r\n            value: optionData[prop],\r\n            name: name + '-option'\r\n          };\r\n\r\n          if (opts.messages.placeholders[prop]) {\r\n            attrs.placeholder = opts.messages.placeholders[prop];\r\n          }\r\n\r\n          if (prop === 'selected' && optionData.selected === true) {\r\n            attrs.checked = optionData.selected;\r\n          }\r\n\r\n          optionInputs.push(utils.markup('input', null, attrs));\r\n        }\r\n      }\r\n\r\n      let removeAttrs = {\r\n        className: 'remove btn',\r\n        title: opts.messages.removeMessage\r\n      };\r\n      optionInputs.push(utils.markup('a', opts.messages.remove, removeAttrs));\r\n\r\n      let field = utils.markup('li', optionInputs);\r\n\r\n      return field.outerHTML;\r\n    };\r\n\r\n    var cloneItem = function cloneItem(currentItem) {\r\n      let currentId = currentItem.attr('id'),\r\n        type = currentItem.attr('type'),\r\n        ts = new Date().getTime(),\r\n        cloneName = type + '-' + ts;\r\n\r\n      var $clone = currentItem.clone();\r\n\r\n      $clone.find('[id]').each(function() { this.id = this.id.replace(currentId, lastID); });\r\n\r\n      $clone.find('[for]').each(function() { this.setAttribute('for', this.getAttribute('for').replace(currentId, lastID)); });\r\n\r\n      $clone.each(function() {\r\n        $('e:not(.form-elements)').each(function() {\r\n          var newName = this.getAttribute('name');\r\n          newName = newName.substring(0, (newName.lastIndexOf('-') + 1));\r\n          newName = newName + ts.toString();\r\n          this.setAttribute('name', newName);\r\n        });\r\n\r\n      });\r\n\r\n      $clone.find('.form-elements').find(':input').each(function() {\r\n        if (this.getAttribute('name') === 'name') {\r\n          var newVal = this.getAttribute('value');\r\n          newVal = newVal.substring(0, (newVal.lastIndexOf('-') + 1));\r\n          newVal = newVal + ts.toString();\r\n          this.setAttribute('value', newVal);\r\n        }\r\n      });\r\n\r\n      $clone.attr('id', lastID);\r\n      $clone.attr('name', cloneName);\r\n      $clone.addClass('cloned');\r\n      $('.sortable-options', $clone).sortable();\r\n\r\n      if (opts.typeUserEvents[type] && opts.typeUserEvents[type].onclone) {\r\n        opts.typeUserEvents[type].onclone($clone[0]);\r\n      }\r\n\r\n      lastID = _helpers.incrementId(lastID);\r\n      return $clone;\r\n    };\r\n\r\n    // ---------------------- UTILITIES ---------------------- //\r\n\r\n    // delete options\r\n    $sortableFields.on('click touchstart', '.remove', function(e) {\r\n      var $field = $(this).parents('.form-field:eq(0)');\r\n      e.preventDefault();\r\n      var optionsCount = $(this).parents('.sortable-options:eq(0)').children('li').length;\r\n      if (optionsCount <= 2) {\r\n        opts.notify.error('Error: ' + opts.messages.minOptionMessage);\r\n      } else {\r\n        $(this).parent('li').slideUp('250', function() {\r\n          $(this).remove();\r\n          _helpers.updatePreview($field);\r\n          _helpers.save();\r\n        });\r\n      }\r\n    });\r\n\r\n    // touch focus\r\n    $sortableFields.on('touchstart', 'input', function(e) {\r\n      if (e.handled !== true) {\r\n        if ($(this).attr('type') === 'checkbox') {\r\n          $(this).trigger('click');\r\n        } else {\r\n          $(this).focus();\r\n          let fieldVal = $(this).val();\r\n          $(this).val(fieldVal);\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    // toggle fields\r\n    $sortableFields.on('click touchstart', '.toggle-form, .close-field', function(e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      if (e.handled !== true) {\r\n        var targetID = $(this).parents('.form-field:eq(0)').attr('id');\r\n        _helpers.toggleEdit(targetID);\r\n        e.handled = true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    $sortableFields.on('change', '.prev-holder input, .prev-holder select', e => {\r\n      if (e.target.classList.contains('other-option')) {\r\n        return;\r\n      }\r\n      let field = $(e.target).closest('li.form-field')[0];\r\n      if (utils.inArray(field.type, ['select', 'checkbox-group', 'radio-group'])) {\r\n        field.querySelector('[class=\"option-value\"][value=\"' + e.target.value + '\"]').parentElement.childNodes[0].checked = true;\r\n      } else {\r\n        document.getElementById('value-' + field.id).value = e.target.value;\r\n      }\r\n\r\n      _helpers.save();\r\n    });\r\n\r\n    // update preview to label\r\n    $sortableFields.on('keyup change', '[name=\"label\"]', function() {\r\n      $('.field-label', $(this).closest('li')).text($(this).val());\r\n    });\r\n\r\n    // remove error styling when users tries to correct mistake\r\n    $sortableFields.delegate('input.error', 'keyup', function() {\r\n      $(this).removeClass('error');\r\n    });\r\n\r\n    // update preview for description\r\n    $sortableFields.on('keyup', 'input[name=\"description\"]', function() {\r\n      var $field = $(this).parents('.form-field:eq(0)');\r\n      var closestToolTip = $('.tooltip-element', $field);\r\n      var ttVal = $(this).val();\r\n      if (ttVal !== '') {\r\n        if (!closestToolTip.length) {\r\n          var tt = '<span class=\"tooltip-element\" tooltip=\"' + ttVal + '\">?</span>';\r\n          $('.field-label', $field).after(tt);\r\n        } else {\r\n          closestToolTip.attr('tooltip', ttVal).css('display', 'inline-block');\r\n        }\r\n      } else {\r\n        if (closestToolTip.length) {\r\n          closestToolTip.css('display', 'none');\r\n        }\r\n      }\r\n    });\r\n\r\n    $sortableFields.on('change', '.fld-multiple', e => {\r\n      let newType = e.target.checked ? 'checkbox' : 'radio';\r\n\r\n      $(e.target)\r\n      .parents('.form-elements:eq(0)')\r\n      .find('.sortable-options input.option-selected')\r\n      .each(function() {\r\n        this.type = newType;\r\n      });\r\n\r\n    });\r\n\r\n    // format name attribute\r\n    $sortableFields.on('blur', 'input.fld-name', function() {\r\n      this.value = _helpers.safename(this.value);\r\n      if (this.value === '') {\r\n        $(this).addClass('field-error').attr('placeholder', opts.messages.cannotBeEmpty);\r\n      } else {\r\n        $(this).removeClass('field-error');\r\n      }\r\n    });\r\n\r\n    $sortableFields.on('blur', 'input.fld-maxlength', function() {\r\n      this.value = _helpers.forceNumber(this.value);\r\n    });\r\n\r\n    // Copy field\r\n    $sortableFields.on('click touchstart', '.icon-copy', function(e) {\r\n      e.preventDefault();\r\n      var currentItem = $(this).parent().parent('li');\r\n      var $clone = cloneItem(currentItem);\r\n      $clone.insertAfter(currentItem);\r\n      _helpers.updatePreview($clone);\r\n      _helpers.save();\r\n    });\r\n\r\n    // Delete field\r\n    $sortableFields.on('click touchstart', '.delete-confirm', function(e) {\r\n      e.preventDefault();\r\n\r\n      let buttonPosition = this.getBoundingClientRect(),\r\n        bodyRect = document.body.getBoundingClientRect(),\r\n        coords = {\r\n          pageX: buttonPosition.left + (buttonPosition.width / 2),\r\n          pageY: (buttonPosition.top - bodyRect.top) - 12\r\n        };\r\n\r\n      var deleteID = $(this).parents('.form-field:eq(0)').attr('id'),\r\n        $field = $(document.getElementById(deleteID));\r\n\r\n      document.addEventListener('modalClosed', function() {\r\n        $field.removeClass('deleting');\r\n      }, false);\r\n\r\n      // Check if user is sure they want to remove the field\r\n      if (opts.fieldRemoveWarn) {\r\n        let warnH3 = utils.markup('h3', opts.messages.warning),\r\n          warnMessage = utils.markup('p', opts.messages.fieldRemoveWarning);\r\n        _helpers.confirm([warnH3, warnMessage], () => _helpers.removeField(deleteID), coords);\r\n        $field.addClass('deleting');\r\n      } else {\r\n        _helpers.removeField(deleteID);\r\n      }\r\n    });\r\n\r\n    // Update button style selection\r\n    $sortableFields.on('click', '.style-wrap button', function() {\r\n      let styleVal = $(this).val(),\r\n        $parent = $(this).parent(),\r\n        $btnStyle = $parent.prev('.btn-style');\r\n      $btnStyle.val(styleVal);\r\n      $(this).siblings('.btn').removeClass('active');\r\n      $(this).addClass('active');\r\n      saveAndUpdate.call($parent);\r\n    });\r\n\r\n    // Attach a callback to toggle required asterisk\r\n    $sortableFields.on('click', 'input.fld-required', function() {\r\n      var requiredAsterisk = $(this).parents('li.form-field').find('.required-asterisk');\r\n      requiredAsterisk.toggle();\r\n    });\r\n\r\n    // Attach a callback to toggle roles visibility\r\n    $sortableFields.on('click', 'input.fld-access', function() {\r\n      var roles = $(this).parents('li.form-field').find('div.available-roles'),\r\n        enableRolesCB = $(this);\r\n      roles.slideToggle(250, function() {\r\n        if (!enableRolesCB.is(':checked')) {\r\n          $('input[type=\"checkbox\"]', roles).removeAttr('checked');\r\n        }\r\n      });\r\n    });\r\n\r\n    // Attach a callback to add new options\r\n    $sortableFields.on('click', '.add-opt', function(e) {\r\n      e.preventDefault();\r\n      var $optionWrap = $(this).parents('.field-options:eq(0)'),\r\n        $multiple = $('[name=\"multiple\"]', $optionWrap),\r\n        $firstOption = $('.option-selected:eq(0)', $optionWrap),\r\n        isMultiple = false;\r\n\r\n      if ($multiple.length) {\r\n        isMultiple = $multiple.prop('checked');\r\n      } else {\r\n        isMultiple = ($firstOption.attr('type') === 'checkbox');\r\n      }\r\n\r\n      let name = $firstOption.attr('name');\r\n\r\n      $('.sortable-options', $optionWrap).append(selectFieldOptions(name, false, isMultiple));\r\n    });\r\n\r\n    $sortableFields.on('mouseover mouseout', '.remove, .del-button', function() {\r\n      $(this).parents('li:eq(0)').toggleClass('delete');\r\n    });\r\n\r\n    if (opts.showActionButtons) {\r\n      // View XML\r\n      var xmlButton = $(document.getElementById(frmbID + '-view-data'));\r\n      xmlButton.click(function(e) {\r\n        e.preventDefault();\r\n        _helpers.showData();\r\n      });\r\n\r\n      // Clear all fields in form editor\r\n      var clearButton = $(document.getElementById(frmbID + '-clear-all'));\r\n      clearButton.click(function() {\r\n        let fields = $('li.form-field');\r\n        let buttonPosition = this.getBoundingClientRect(),\r\n          bodyRect = document.body.getBoundingClientRect(),\r\n          coords = {\r\n            pageX: buttonPosition.left + (buttonPosition.width / 2),\r\n            pageY: (buttonPosition.top - bodyRect.top) - 12\r\n          };\r\n\r\n        if (fields.length) {\r\n          _helpers.confirm(opts.messages.clearAllMessage, function() {\r\n            _helpers.removeAllfields();\r\n            opts.notify.success(opts.messages.allFieldsRemoved);\r\n            _helpers.save();\r\n          }, coords);\r\n        } else {\r\n          _helpers.dialog('There are no fields to clear', {pageX: coords.pageX, pageY: coords.pageY});\r\n        }\r\n      });\r\n\r\n      // Save Idea Template\r\n      $(document.getElementById(frmbID + '-save')).click(function(e) {\r\n        e.preventDefault();\r\n        _helpers.save();\r\n      });\r\n    }\r\n\r\n    _helpers.getData();\r\n    loadFields();\r\n\r\n    $sortableFields.css('min-height', $cbUL.height());\r\n\r\n    // If option set, controls will remain in view in editor\r\n    if (opts.stickyControls) {\r\n      _helpers.stickyControls($sortableFields, cbUl);\r\n    }\r\n\r\n    document.dispatchEvent(formBuilder.events.loaded);\r\n\r\n    // Make actions accessible\r\n    formBuilder.actions = {\r\n      clearFields: _helpers.removeAllfields,\r\n      showData: _helpers.showData,\r\n      save: _helpers.save,\r\n      addField: (field, index) => {\r\n        _helpers.stopIndex = $sortableFields[0].children.length ? index : undefined;\r\n        prepFieldVars(field);\r\n        document.dispatchEvent(formBuilder.events.fieldAdded);\r\n      },\r\n      removeField: _helpers.removeField,\r\n      setData: formData => {\r\n        _helpers.removeAllfields();\r\n        _helpers.getData(formData);\r\n        loadFields();\r\n      }\r\n    };\r\n\r\n    return formBuilder;\r\n  };\r\n\r\n  $.fn.formBuilder = function(options) {\r\n    options = options || {};\r\n    return this.each(function() {\r\n      var formBuilder = new FormBuilder(options, this);\r\n      $(this).data('formBuilder', formBuilder);\r\n\r\n      return formBuilder;\r\n    });\r\n  };\r\n\r\n})(jQuery);\r\n"]}